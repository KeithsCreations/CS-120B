
khuss001_project_pong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  000010f2  00001186  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001f  00800186  00800186  0000120c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000120c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015b0  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a7c  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010d5  00000000  00000000  00003390  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f0  00000000  00000000  00004468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000732  00000000  00000000  00004658  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000522  00000000  00000000  00004d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000052ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	4f c0       	rjmp	.+158    	; 0xa0 <__ctors_end>
       2:	00 00       	nop
       4:	6b c0       	rjmp	.+214    	; 0xdc <__bad_interrupt>
       6:	00 00       	nop
       8:	69 c0       	rjmp	.+210    	; 0xdc <__bad_interrupt>
       a:	00 00       	nop
       c:	67 c0       	rjmp	.+206    	; 0xdc <__bad_interrupt>
       e:	00 00       	nop
      10:	65 c0       	rjmp	.+202    	; 0xdc <__bad_interrupt>
      12:	00 00       	nop
      14:	63 c0       	rjmp	.+198    	; 0xdc <__bad_interrupt>
      16:	00 00       	nop
      18:	61 c0       	rjmp	.+194    	; 0xdc <__bad_interrupt>
      1a:	00 00       	nop
      1c:	5f c0       	rjmp	.+190    	; 0xdc <__bad_interrupt>
      1e:	00 00       	nop
      20:	5d c0       	rjmp	.+186    	; 0xdc <__bad_interrupt>
      22:	00 00       	nop
      24:	5b c0       	rjmp	.+182    	; 0xdc <__bad_interrupt>
      26:	00 00       	nop
      28:	59 c0       	rjmp	.+178    	; 0xdc <__bad_interrupt>
      2a:	00 00       	nop
      2c:	57 c0       	rjmp	.+174    	; 0xdc <__bad_interrupt>
      2e:	00 00       	nop
      30:	55 c0       	rjmp	.+170    	; 0xdc <__bad_interrupt>
      32:	00 00       	nop
      34:	8d c1       	rjmp	.+794    	; 0x350 <__vector_13>
      36:	00 00       	nop
      38:	51 c0       	rjmp	.+162    	; 0xdc <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4f c0       	rjmp	.+158    	; 0xdc <__bad_interrupt>
      3e:	00 00       	nop
      40:	4d c0       	rjmp	.+154    	; 0xdc <__bad_interrupt>
      42:	00 00       	nop
      44:	4b c0       	rjmp	.+150    	; 0xdc <__bad_interrupt>
      46:	00 00       	nop
      48:	49 c0       	rjmp	.+146    	; 0xdc <__bad_interrupt>
      4a:	00 00       	nop
      4c:	47 c0       	rjmp	.+142    	; 0xdc <__bad_interrupt>
      4e:	00 00       	nop
      50:	45 c0       	rjmp	.+138    	; 0xdc <__bad_interrupt>
      52:	00 00       	nop
      54:	43 c0       	rjmp	.+134    	; 0xdc <__bad_interrupt>
      56:	00 00       	nop
      58:	41 c0       	rjmp	.+130    	; 0xdc <__bad_interrupt>
      5a:	00 00       	nop
      5c:	3f c0       	rjmp	.+126    	; 0xdc <__bad_interrupt>
      5e:	00 00       	nop
      60:	3d c0       	rjmp	.+122    	; 0xdc <__bad_interrupt>
      62:	00 00       	nop
      64:	3b c0       	rjmp	.+118    	; 0xdc <__bad_interrupt>
      66:	00 00       	nop
      68:	39 c0       	rjmp	.+114    	; 0xdc <__bad_interrupt>
      6a:	00 00       	nop
      6c:	37 c0       	rjmp	.+110    	; 0xdc <__bad_interrupt>
      6e:	00 00       	nop
      70:	35 c0       	rjmp	.+106    	; 0xdc <__bad_interrupt>
      72:	00 00       	nop
      74:	33 c0       	rjmp	.+102    	; 0xdc <__bad_interrupt>
      76:	00 00       	nop
      78:	31 c0       	rjmp	.+98     	; 0xdc <__bad_interrupt>
      7a:	00 00       	nop
      7c:	2f c0       	rjmp	.+94     	; 0xdc <__bad_interrupt>
      7e:	00 00       	nop
      80:	2d c0       	rjmp	.+90     	; 0xdc <__bad_interrupt>
      82:	00 00       	nop
      84:	2b c0       	rjmp	.+86     	; 0xdc <__bad_interrupt>
      86:	00 00       	nop
      88:	29 c0       	rjmp	.+82     	; 0xdc <__bad_interrupt>
      8a:	00 00       	nop
      8c:	0f 02       	muls	r16, r31
      8e:	13 02       	muls	r17, r19
      90:	25 02       	muls	r18, r21
      92:	b7 02       	muls	r27, r23
      94:	41 02       	muls	r20, r17
      96:	b1 04       	cpc	r11, r1
      98:	72 05       	cpc	r23, r2
      9a:	30 03       	mulsu	r19, r16
      9c:	f0 03       	fmuls	r23, r16
      9e:	34 06       	cpc	r3, r20

000000a0 <__ctors_end>:
      a0:	11 24       	eor	r1, r1
      a2:	1f be       	out	0x3f, r1	; 63
      a4:	cf ef       	ldi	r28, 0xFF	; 255
      a6:	d0 e4       	ldi	r29, 0x40	; 64
      a8:	de bf       	out	0x3e, r29	; 62
      aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
      ac:	11 e0       	ldi	r17, 0x01	; 1
      ae:	a0 e0       	ldi	r26, 0x00	; 0
      b0:	b1 e0       	ldi	r27, 0x01	; 1
      b2:	e2 ef       	ldi	r30, 0xF2	; 242
      b4:	f0 e1       	ldi	r31, 0x10	; 16
      b6:	00 e0       	ldi	r16, 0x00	; 0
      b8:	0b bf       	out	0x3b, r16	; 59
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x14>
      bc:	07 90       	elpm	r0, Z+
      be:	0d 92       	st	X+, r0
      c0:	a6 38       	cpi	r26, 0x86	; 134
      c2:	b1 07       	cpc	r27, r17
      c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0x10>

000000c6 <__do_clear_bss>:
      c6:	21 e0       	ldi	r18, 0x01	; 1
      c8:	a6 e8       	ldi	r26, 0x86	; 134
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	a5 3a       	cpi	r26, 0xA5	; 165
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	01 d7       	rcall	.+3586   	; 0xeda <main>
      d8:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <_exit>

000000dc <__bad_interrupt>:
      dc:	91 cf       	rjmp	.-222    	; 0x0 <__vectors>

000000de <delay_ms>:

void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
      de:	18 16       	cp	r1, r24
      e0:	19 06       	cpc	r1, r25
      e2:	5c f0       	brlt	.+22     	; 0xfa <delay_ms+0x1c>
      e4:	08 95       	ret
    for(j=0;j<775;j++)
  {
   asm("nop");
      e6:	00 00       	nop
      e8:	21 50       	subi	r18, 0x01	; 1
      ea:	31 09       	sbc	r19, r1
void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
    for(j=0;j<775;j++)
      ec:	e1 f7       	brne	.-8      	; 0xe6 <delay_ms+0x8>

void delay_ms(int miliSec) //for 8 Mhz crystal

{
    int i,j;
    for(i=0;i<miliSec;i++)
      ee:	4f 5f       	subi	r20, 0xFF	; 255
      f0:	5f 4f       	sbci	r21, 0xFF	; 255
      f2:	84 17       	cp	r24, r20
      f4:	95 07       	cpc	r25, r21
      f6:	19 f4       	brne	.+6      	; 0xfe <delay_ms+0x20>
      f8:	08 95       	ret
      fa:	40 e0       	ldi	r20, 0x00	; 0
      fc:	50 e0       	ldi	r21, 0x00	; 0
   }
}

void delay_ms(int miliSec) //for 8 Mhz crystal

{
      fe:	27 e0       	ldi	r18, 0x07	; 7
     100:	33 e0       	ldi	r19, 0x03	; 3
     102:	f1 cf       	rjmp	.-30     	; 0xe6 <delay_ms+0x8>

00000104 <LCD_WriteCommand>:
	LCD_WriteCommand(0x01);
	delay_ms(10);						 
}

void LCD_WriteCommand (unsigned char Command) {
   CLR_BIT(CONTROL_BUS,RS);
     104:	5e 98       	cbi	0x0b, 6	; 11
   DATA_BUS = Command;
     106:	88 b9       	out	0x08, r24	; 8
   SET_BIT(CONTROL_BUS,E);
     108:	5f 9a       	sbi	0x0b, 7	; 11
   asm("nop");
     10a:	00 00       	nop
   CLR_BIT(CONTROL_BUS,E);
     10c:	5f 98       	cbi	0x0b, 7	; 11
   delay_ms(2); // ClearScreen requires 1.52ms to execute
     10e:	82 e0       	ldi	r24, 0x02	; 2
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	e5 cf       	rjmp	.-54     	; 0xde <delay_ms>
     114:	08 95       	ret

00000116 <LCD_ClearScreen>:
#define E 7			// pin number of uC connected to pin 6 of LCD disp.

/*-------------------------------------------------------------------------*/

void LCD_ClearScreen(void) {
   LCD_WriteCommand(0x01);
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	f5 cf       	rjmp	.-22     	; 0x104 <LCD_WriteCommand>
     11a:	08 95       	ret

0000011c <LCD_Cursor>:
      LCD_WriteData(*string++);
   }
}

void LCD_Cursor(unsigned char column) {
   if ( column < 17 ) { // 16x1 LCD: column < 9
     11c:	81 31       	cpi	r24, 0x11	; 17
     11e:	18 f4       	brcc	.+6      	; 0x126 <LCD_Cursor+0xa>
						// 16x2 LCD: column < 17
      LCD_WriteCommand(0x80 + column - 1);
     120:	81 58       	subi	r24, 0x81	; 129
     122:	f0 cf       	rjmp	.-32     	; 0x104 <LCD_WriteCommand>
     124:	08 95       	ret
   } else {
      LCD_WriteCommand(0xB8 + column - 9);	// 16x1 LCD: column - 1
     126:	81 55       	subi	r24, 0x51	; 81
     128:	ed cf       	rjmp	.-38     	; 0x104 <LCD_WriteCommand>
     12a:	08 95       	ret

0000012c <LCD_init>:
}

void LCD_init(void) {

    //wait for 100 ms.
	delay_ms(100);
     12c:	84 e6       	ldi	r24, 0x64	; 100
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	d6 df       	rcall	.-84     	; 0xde <delay_ms>
	LCD_WriteCommand(0x38);
     132:	88 e3       	ldi	r24, 0x38	; 56
     134:	e7 df       	rcall	.-50     	; 0x104 <LCD_WriteCommand>
	LCD_WriteCommand(0x06);
     136:	86 e0       	ldi	r24, 0x06	; 6
     138:	e5 df       	rcall	.-54     	; 0x104 <LCD_WriteCommand>
	LCD_WriteCommand(0x0f);
     13a:	8f e0       	ldi	r24, 0x0F	; 15
     13c:	e3 df       	rcall	.-58     	; 0x104 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);
     13e:	81 e0       	ldi	r24, 0x01	; 1
     140:	e1 df       	rcall	.-62     	; 0x104 <LCD_WriteCommand>
	delay_ms(10);						 
     142:	8a e0       	ldi	r24, 0x0A	; 10
     144:	90 e0       	ldi	r25, 0x00	; 0
     146:	cb cf       	rjmp	.-106    	; 0xde <delay_ms>
     148:	08 95       	ret

0000014a <LCD_WriteData>:
     14a:	5e 9a       	sbi	0x0b, 6	; 11
   delay_ms(2); // ClearScreen requires 1.52ms to execute
}

void LCD_WriteData(unsigned char Data) {
   SET_BIT(CONTROL_BUS,RS);
   DATA_BUS = Data;
     14c:	88 b9       	out	0x08, r24	; 8
   SET_BIT(CONTROL_BUS,E);
     14e:	5f 9a       	sbi	0x0b, 7	; 11
   asm("nop");
     150:	00 00       	nop
   CLR_BIT(CONTROL_BUS,E);
     152:	5f 98       	cbi	0x0b, 7	; 11
   delay_ms(1);
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	c2 cf       	rjmp	.-124    	; 0xde <delay_ms>
     15a:	08 95       	ret

0000015c <LCD_DisplayString>:
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
     15c:	0f 93       	push	r16
     15e:	1f 93       	push	r17
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	18 2f       	mov	r17, r24
     166:	eb 01       	movw	r28, r22
   LCD_ClearScreen();
     168:	d6 df       	rcall	.-84     	; 0x116 <LCD_ClearScreen>
   unsigned char c = column;
   while(*string) {
     16a:	88 81       	ld	r24, Y
     16c:	88 23       	and	r24, r24
     16e:	51 f0       	breq	.+20     	; 0x184 <LCD_DisplayString+0x28>
      LCD_Cursor(c++);
     170:	01 e0       	ldi	r16, 0x01	; 1
     172:	01 0f       	add	r16, r17
     174:	81 2f       	mov	r24, r17
     176:	d2 df       	rcall	.-92     	; 0x11c <LCD_Cursor>
      LCD_WriteData(*string++);
     178:	89 91       	ld	r24, Y+
     17a:	e7 df       	rcall	.-50     	; 0x14a <LCD_WriteData>
     17c:	10 2f       	mov	r17, r16

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
      LCD_Cursor(c++);
     17e:	88 81       	ld	r24, Y
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
     180:	81 11       	cpse	r24, r1
     182:	f6 cf       	rjmp	.-20     	; 0x170 <LCD_DisplayString+0x14>
     184:	df 91       	pop	r29
      LCD_Cursor(c++);
      LCD_WriteData(*string++);
   }
}
     186:	cf 91       	pop	r28
     188:	1f 91       	pop	r17
     18a:	0f 91       	pop	r16
     18c:	08 95       	ret

0000018e <display>:
     18e:	cf 93       	push	r28
}
void TimerOff() {
	TCCR1B = 0x00; // bit3bit1bit0=000: timer off
}
void TimerISR() {
	TimerFlag = 1;
     190:	df 93       	push	r29
     192:	cd b7       	in	r28, 0x3d	; 61
     194:	de b7       	in	r29, 0x3e	; 62
     196:	60 97       	sbiw	r28, 0x10	; 16
     198:	0f b6       	in	r0, 0x3f	; 63
     19a:	f8 94       	cli
     19c:	de bf       	out	0x3e, r29	; 62
     19e:	0f be       	out	0x3f, r0	; 63
     1a0:	cd bf       	out	0x3d, r28	; 61
     1a2:	e8 e2       	ldi	r30, 0x28	; 40
     1a4:	f1 e0       	ldi	r31, 0x01	; 1
     1a6:	20 e0       	ldi	r18, 0x00	; 0
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	71 e0       	ldi	r23, 0x01	; 1
     1ae:	ac 01       	movw	r20, r24
     1b0:	02 2e       	mov	r0, r18
     1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <display+0x2a>
     1b4:	55 95       	asr	r21
     1b6:	47 95       	ror	r20
     1b8:	0a 94       	dec	r0
     1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <display+0x26>
     1bc:	40 ff       	sbrs	r20, 0
     1be:	06 c0       	rjmp	.+12     	; 0x1cc <display+0x3e>
     1c0:	a0 81       	ld	r26, Z
     1c2:	b1 81       	ldd	r27, Z+1	; 0x01
     1c4:	ac 0f       	add	r26, r28
     1c6:	bd 1f       	adc	r27, r29
     1c8:	7c 93       	st	X, r23
     1ca:	05 c0       	rjmp	.+10     	; 0x1d6 <display+0x48>
     1cc:	a0 81       	ld	r26, Z
     1ce:	b1 81       	ldd	r27, Z+1	; 0x01
     1d0:	ac 0f       	add	r26, r28
     1d2:	bd 1f       	adc	r27, r29
     1d4:	1c 92       	st	X, r1
     1d6:	2f 5f       	subi	r18, 0xFF	; 255
     1d8:	3f 4f       	sbci	r19, 0xFF	; 255
     1da:	32 96       	adiw	r30, 0x02	; 2
     1dc:	28 30       	cpi	r18, 0x08	; 8
     1de:	31 05       	cpc	r19, r1
     1e0:	31 f7       	brne	.-52     	; 0x1ae <display+0x20>
     1e2:	e8 e1       	ldi	r30, 0x18	; 24
     1e4:	f1 e0       	ldi	r31, 0x01	; 1
     1e6:	80 e0       	ldi	r24, 0x00	; 0
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	70 e0       	ldi	r23, 0x00	; 0
     1ec:	41 e0       	ldi	r20, 0x01	; 1
     1ee:	9b 01       	movw	r18, r22
     1f0:	08 2e       	mov	r0, r24
     1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <display+0x6a>
     1f4:	35 95       	asr	r19
     1f6:	27 95       	ror	r18
     1f8:	0a 94       	dec	r0
     1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <display+0x66>
     1fc:	20 ff       	sbrs	r18, 0
     1fe:	06 c0       	rjmp	.+12     	; 0x20c <display+0x7e>
     200:	a0 81       	ld	r26, Z
     202:	b1 81       	ldd	r27, Z+1	; 0x01
     204:	ac 0f       	add	r26, r28
     206:	bd 1f       	adc	r27, r29
     208:	4c 93       	st	X, r20
     20a:	05 c0       	rjmp	.+10     	; 0x216 <display+0x88>
     20c:	a0 81       	ld	r26, Z
     20e:	b1 81       	ldd	r27, Z+1	; 0x01
     210:	ac 0f       	add	r26, r28
     212:	bd 1f       	adc	r27, r29
     214:	1c 92       	st	X, r1
     216:	01 96       	adiw	r24, 0x01	; 1
     218:	32 96       	adiw	r30, 0x02	; 2
     21a:	88 30       	cpi	r24, 0x08	; 8
     21c:	91 05       	cpc	r25, r1
     21e:	39 f7       	brne	.-50     	; 0x1ee <display+0x60>
     220:	fe 01       	movw	r30, r28
     222:	71 96       	adiw	r30, 0x11	; 17
     224:	9e 01       	movw	r18, r28
     226:	2f 5f       	subi	r18, 0xFF	; 255
     228:	3f 4f       	sbci	r19, 0xFF	; 255
     22a:	82 91       	ld	r24, -Z
     22c:	85 b9       	out	0x05, r24	; 5
     22e:	80 81       	ld	r24, Z
     230:	84 60       	ori	r24, 0x04	; 4
     232:	85 b9       	out	0x05, r24	; 5
     234:	2e 17       	cp	r18, r30
     236:	3f 07       	cpc	r19, r31
     238:	c1 f7       	brne	.-16     	; 0x22a <display+0x9c>
     23a:	82 e0       	ldi	r24, 0x02	; 2
     23c:	85 b9       	out	0x05, r24	; 5
     23e:	60 96       	adiw	r28, 0x10	; 16
     240:	0f b6       	in	r0, 0x3f	; 63
     242:	f8 94       	cli
     244:	de bf       	out	0x3e, r29	; 62
     246:	0f be       	out	0x3f, r0	; 63
     248:	cd bf       	out	0x3d, r28	; 61
     24a:	df 91       	pop	r29
     24c:	cf 91       	pop	r28
     24e:	08 95       	ret

00000250 <render_p1>:
     250:	00 97       	sbiw	r24, 0x00	; 0
     252:	29 f4       	brne	.+10     	; 0x25e <render_p1+0xe>
     254:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     258:	80 ee       	ldi	r24, 0xE0	; 224
     25a:	99 cf       	rjmp	.-206    	; 0x18e <display>
     25c:	08 95       	ret
     25e:	81 30       	cpi	r24, 0x01	; 1
     260:	91 05       	cpc	r25, r1
     262:	29 f4       	brne	.+10     	; 0x26e <render_p1+0x1e>
     264:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     268:	80 e7       	ldi	r24, 0x70	; 112
     26a:	91 cf       	rjmp	.-222    	; 0x18e <display>
     26c:	08 95       	ret
     26e:	82 30       	cpi	r24, 0x02	; 2
     270:	91 05       	cpc	r25, r1
     272:	29 f4       	brne	.+10     	; 0x27e <render_p1+0x2e>
     274:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     278:	88 e3       	ldi	r24, 0x38	; 56
     27a:	89 cf       	rjmp	.-238    	; 0x18e <display>
     27c:	08 95       	ret
     27e:	83 30       	cpi	r24, 0x03	; 3
     280:	91 05       	cpc	r25, r1
     282:	29 f4       	brne	.+10     	; 0x28e <render_p1+0x3e>
     284:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     288:	8c e1       	ldi	r24, 0x1C	; 28
     28a:	81 cf       	rjmp	.-254    	; 0x18e <display>
     28c:	08 95       	ret
     28e:	84 30       	cpi	r24, 0x04	; 4
     290:	91 05       	cpc	r25, r1
     292:	29 f4       	brne	.+10     	; 0x29e <render_p1+0x4e>
     294:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     298:	8e e0       	ldi	r24, 0x0E	; 14
     29a:	79 cf       	rjmp	.-270    	; 0x18e <display>
     29c:	08 95       	ret
     29e:	05 97       	sbiw	r24, 0x05	; 5
     2a0:	21 f4       	brne	.+8      	; 0x2aa <render_p1+0x5a>
     2a2:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <ball_yd>
     2a6:	87 e0       	ldi	r24, 0x07	; 7
     2a8:	72 cf       	rjmp	.-284    	; 0x18e <display>
     2aa:	08 95       	ret

000002ac <render_p2>:
     2ac:	00 97       	sbiw	r24, 0x00	; 0
     2ae:	29 f4       	brne	.+10     	; 0x2ba <render_p2+0xe>
     2b0:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     2b4:	80 ee       	ldi	r24, 0xE0	; 224
     2b6:	6b cf       	rjmp	.-298    	; 0x18e <display>
     2b8:	08 95       	ret
     2ba:	81 30       	cpi	r24, 0x01	; 1
     2bc:	91 05       	cpc	r25, r1
     2be:	29 f4       	brne	.+10     	; 0x2ca <render_p2+0x1e>
     2c0:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     2c4:	80 e7       	ldi	r24, 0x70	; 112
     2c6:	63 cf       	rjmp	.-314    	; 0x18e <display>
     2c8:	08 95       	ret
     2ca:	82 30       	cpi	r24, 0x02	; 2
     2cc:	91 05       	cpc	r25, r1
     2ce:	29 f4       	brne	.+10     	; 0x2da <render_p2+0x2e>
     2d0:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     2d4:	88 e3       	ldi	r24, 0x38	; 56
     2d6:	5b cf       	rjmp	.-330    	; 0x18e <display>
     2d8:	08 95       	ret
     2da:	83 30       	cpi	r24, 0x03	; 3
     2dc:	91 05       	cpc	r25, r1
     2de:	29 f4       	brne	.+10     	; 0x2ea <render_p2+0x3e>
     2e0:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     2e4:	8c e1       	ldi	r24, 0x1C	; 28
     2e6:	53 cf       	rjmp	.-346    	; 0x18e <display>
     2e8:	08 95       	ret
     2ea:	84 30       	cpi	r24, 0x04	; 4
     2ec:	91 05       	cpc	r25, r1
     2ee:	29 f4       	brne	.+10     	; 0x2fa <render_p2+0x4e>
     2f0:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     2f4:	8e e0       	ldi	r24, 0x0E	; 14
     2f6:	4b cf       	rjmp	.-362    	; 0x18e <display>
     2f8:	08 95       	ret
     2fa:	05 97       	sbiw	r24, 0x05	; 5
     2fc:	21 f4       	brne	.+8      	; 0x306 <render_p2+0x5a>
     2fe:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <ball_yd+0x7>
     302:	87 e0       	ldi	r24, 0x07	; 7
     304:	44 cf       	rjmp	.-376    	; 0x18e <display>
     306:	08 95       	ret

00000308 <TimerOn>:
     308:	8b e0       	ldi	r24, 0x0B	; 11
     30a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     30e:	8d e7       	ldi	r24, 0x7D	; 125
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     316:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     31a:	82 e0       	ldi	r24, 0x02	; 2
     31c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     320:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     324:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     328:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     32c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     330:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     334:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     338:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
     33c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x1>
     340:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <__data_end+0x2>
     344:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <__data_end+0x3>
     348:	8f b7       	in	r24, 0x3f	; 63
     34a:	80 68       	ori	r24, 0x80	; 128
     34c:	8f bf       	out	0x3f, r24	; 63
     34e:	08 95       	ret

00000350 <__vector_13>:
}
ISR(TIMER1_COMPA_vect) {
     350:	1f 92       	push	r1
     352:	0f 92       	push	r0
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	0f 92       	push	r0
     358:	11 24       	eor	r1, r1
     35a:	8f 93       	push	r24
     35c:	9f 93       	push	r25
     35e:	af 93       	push	r26
     360:	bf 93       	push	r27
	// CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
     362:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <__data_end>
     366:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <__data_end+0x1>
     36a:	a0 91 88 01 	lds	r26, 0x0188	; 0x800188 <__data_end+0x2>
     36e:	b0 91 89 01 	lds	r27, 0x0189	; 0x800189 <__data_end+0x3>
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	a1 09       	sbc	r26, r1
     376:	b1 09       	sbc	r27, r1
     378:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
     37c:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x1>
     380:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <__data_end+0x2>
     384:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <__data_end+0x3>
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
     388:	89 2b       	or	r24, r25
     38a:	8a 2b       	or	r24, r26
     38c:	8b 2b       	or	r24, r27
     38e:	99 f4       	brne	.+38     	; 0x3b6 <__vector_13+0x66>
}
void TimerOff() {
	TCCR1B = 0x00; // bit3bit1bit0=000: timer off
}
void TimerISR() {
	TimerFlag = 1;
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <TimerFlag>
ISR(TIMER1_COMPA_vect) {
	// CPU automatically calls when TCNT1 == OCR1 (every 1 ms per TimerOn settings)
	_avr_timer_cntcurr--; // Count down to 0 rather than up to TOP
	if (_avr_timer_cntcurr == 0) { // results in a more efficient compare
		TimerISR(); // Call the ISR that the user uses
		_avr_timer_cntcurr = _avr_timer_M;
     396:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <_avr_timer_M>
     39a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <_avr_timer_M+0x1>
     39e:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <_avr_timer_M+0x2>
     3a2:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <_avr_timer_M+0x3>
     3a6:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
     3aa:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x1>
     3ae:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <__data_end+0x2>
     3b2:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <__data_end+0x3>
	}
}
     3b6:	bf 91       	pop	r27
     3b8:	af 91       	pop	r26
     3ba:	9f 91       	pop	r25
     3bc:	8f 91       	pop	r24
     3be:	0f 90       	pop	r0
     3c0:	0f be       	out	0x3f, r0	; 63
     3c2:	0f 90       	pop	r0
     3c4:	1f 90       	pop	r1
     3c6:	18 95       	reti

000003c8 <TimerSet>:
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
     3c8:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_avr_timer_M>
     3cc:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_avr_timer_M+0x1>
     3d0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_avr_timer_M+0x2>
     3d4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_avr_timer_M+0x3>
	_avr_timer_cntcurr = _avr_timer_M;
     3d8:	60 93 86 01 	sts	0x0186, r22	; 0x800186 <__data_end>
     3dc:	70 93 87 01 	sts	0x0187, r23	; 0x800187 <__data_end+0x1>
     3e0:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <__data_end+0x2>
     3e4:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <__data_end+0x3>
     3e8:	08 95       	ret

000003ea <X_update>:
}

void X_update(){
     3ea:	cf 93       	push	r28
p1_b1 = ~PINA & 0x01;
     3ec:	80 b1       	in	r24, 0x00	; 0
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	28 2f       	mov	r18, r24
     3f2:	21 70       	andi	r18, 0x01	; 1
     3f4:	80 fd       	sbrc	r24, 0
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <p1_b1>
p1_b2 = ~PINA & 0x02;
     3fc:	80 b1       	in	r24, 0x00	; 0
     3fe:	80 95       	com	r24
     400:	82 70       	andi	r24, 0x02	; 2
     402:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <p1_b2>

	switch(b_state){
     406:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <b_state>
     40a:	4e 2f       	mov	r20, r30
     40c:	50 e0       	ldi	r21, 0x00	; 0
     40e:	4a 30       	cpi	r20, 0x0A	; 10
     410:	51 05       	cpc	r21, r1
     412:	08 f0       	brcs	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	38 c4       	rjmp	.+2160   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
     416:	fa 01       	movw	r30, r20
     418:	ea 5b       	subi	r30, 0xBA	; 186
     41a:	ff 4f       	sbci	r31, 0xFF	; 255
     41c:	ad c5       	rjmp	.+2906   	; 0xf78 <__tablejump2__>
		case STARTx:
		b_state =  WAITx;
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
		break;
     424:	30 c4       	rjmp	.+2144   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		case WAITx:
		if (p1_b1){
     426:	21 11       	cpse	r18, r1
     428:	07 c0       	rjmp	.+14     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
			flag = 0x01;
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <flag>
			b_state = WAITx_release;
     430:	82 e0       	ldi	r24, 0x02	; 2
     432:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     436:	27 c4       	rjmp	.+2126   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		}
		else if (p1_b2){
     438:	88 23       	and	r24, r24
     43a:	09 f4       	brne	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43c:	24 c4       	rjmp	.+2120   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			flag = 0x02;
     43e:	82 e0       	ldi	r24, 0x02	; 2
     440:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <flag>
			b_state = WAITx_release;
     444:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     448:	1e c4       	rjmp	.+2108   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		}
		break;
		
		case WAITx_release:
		if (!p1_b1 && !p1_b2){
     44a:	22 23       	and	r18, r18
     44c:	09 f4       	brne	.+2      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     44e:	1b c4       	rjmp	.+2102   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
     450:	81 11       	cpse	r24, r1
     452:	19 c4       	rjmp	.+2098   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			if (flag == 0x01){
     454:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <flag>
     458:	81 30       	cpi	r24, 0x01	; 1
     45a:	19 f4       	brne	.+6      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
				flag_2 = 0x01;
     45c:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <flag_2>
     460:	03 c0       	rjmp	.+6      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
			}
			else {
				flag_2 = 0x02;
     462:	82 e0       	ldi	r24, 0x02	; 2
     464:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <flag_2>
			}
			b_state = dec_y;
     468:	c4 e0       	ldi	r28, 0x04	; 4
     46a:	c0 93 a0 01 	sts	0x01A0, r28	; 0x8001a0 <b_state>
			LCD_ClearScreen();
     46e:	53 de       	rcall	.-858    	; 0x116 <LCD_ClearScreen>
			LCD_DisplayString(1, "P1: 0   P2: 0");
     470:	68 e3       	ldi	r22, 0x38	; 56
     472:	71 e0       	ldi	r23, 0x01	; 1
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	72 de       	rcall	.-796    	; 0x15c <LCD_DisplayString>
			ball_x_index = 4;
     478:	c0 93 93 01 	sts	0x0193, r28	; 0x800193 <ball_x_index>
			ball_y_index = 4;
     47c:	c0 93 92 01 	sts	0x0192, r28	; 0x800192 <ball_y_index>
     480:	02 c4       	rjmp	.+2052   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
	//		display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
		}
		break;
		
		case dec_y: // -y
		if ((score_p1 == 5) || (score_p2 == 5)){
     482:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     486:	85 30       	cpi	r24, 0x05	; 5
     488:	29 f0       	breq	.+10     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
     48a:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     48e:	85 30       	cpi	r24, 0x05	; 5
     490:	79 f4       	brne	.+30     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
     492:	07 c0       	rjmp	.+14     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
			if (score_p1 == 5){
				win = 0x01;
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <win>
				b_state = DONE;
     49a:	89 e0       	ldi	r24, 0x09	; 9
     49c:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     4a0:	61 c0       	rjmp	.+194    	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
			}
			else{
				win = 0x02;
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <win>
				b_state = DONE;
     4a8:	89 e0       	ldi	r24, 0x09	; 9
     4aa:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     4ae:	5a c0       	rjmp	.+180    	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
			}
		}
		
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 1)){
     4b0:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     4b4:	81 30       	cpi	r24, 0x01	; 1
     4b6:	89 f5       	brne	.+98     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
     4b8:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <ball_x_index>
     4bc:	49 2f       	mov	r20, r25
     4be:	50 e0       	ldi	r21, 0x00	; 0
     4c0:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <p1_index>
     4c4:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <p1_index+0x1>
     4c8:	b9 01       	movw	r22, r18
     4ca:	6f 5f       	subi	r22, 0xFF	; 255
     4cc:	7f 4f       	sbci	r23, 0xFF	; 255
     4ce:	46 17       	cp	r20, r22
     4d0:	57 07       	cpc	r21, r23
     4d2:	39 f4       	brne	.+14     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
			b_state = inc_y;
     4d4:	83 e0       	ldi	r24, 0x03	; 3
     4d6:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_y_index++;
     4da:	82 e0       	ldi	r24, 0x02	; 2
     4dc:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     4e0:	41 c0       	rjmp	.+130    	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
		}
		else if (ball_y_index == 1 && (ball_x_index == p1_index)){
     4e2:	42 17       	cp	r20, r18
     4e4:	53 07       	cpc	r21, r19
     4e6:	51 f4       	brne	.+20     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
			b_state = dec_x_inc_y;
     4e8:	87 e0       	ldi	r24, 0x07	; 7
     4ea:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_y_index++;
     4ee:	82 e0       	ldi	r24, 0x02	; 2
     4f0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			ball_x_index--;
     4f4:	91 50       	subi	r25, 0x01	; 1
     4f6:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
     4fa:	34 c0       	rjmp	.+104    	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 2)){
     4fc:	2e 5f       	subi	r18, 0xFE	; 254
     4fe:	3f 4f       	sbci	r19, 0xFF	; 255
     500:	42 17       	cp	r20, r18
     502:	53 07       	cpc	r21, r19
     504:	61 f5       	brne	.+88     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
			b_state = inc_x_inc_y;
     506:	85 e0       	ldi	r24, 0x05	; 5
     508:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_x_index++;
     50c:	9f 5f       	subi	r25, 0xFF	; 255
     50e:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
			ball_y_index++;
     512:	82 e0       	ldi	r24, 0x02	; 2
     514:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 0){
     518:	25 c0       	rjmp	.+74     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
     51a:	81 11       	cpse	r24, r1
			if (rand() % 2 == 1){
     51c:	20 c0       	rjmp	.+64     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
     51e:	7c d5       	rcall	.+2808   	; 0x1018 <rand>
     520:	81 70       	andi	r24, 0x01	; 1
     522:	90 78       	andi	r25, 0x80	; 128
     524:	99 23       	and	r25, r25
     526:	24 f4       	brge	.+8      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	8e 6f       	ori	r24, 0xFE	; 254
     52c:	9f 6f       	ori	r25, 0xFF	; 255
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	19 f4       	brne	.+6      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
				b_state = inc_y;
     534:	83 e0       	ldi	r24, 0x03	; 3
     536:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			ball_x_index = 4;
     53a:	84 e0       	ldi	r24, 0x04	; 4
     53c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index = 4;
     540:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			score_p2++;
     544:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     548:	8f 5f       	subi	r24, 0xFF	; 255
     54a:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score_p2>
			LCD_Cursor(13);
     54e:	8d e0       	ldi	r24, 0x0D	; 13
			LCD_WriteData(score_p2 + 0x30);
     550:	e5 dd       	rcall	.-1078   	; 0x11c <LCD_Cursor>
     552:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	c0 96       	adiw	r24, 0x30	; 48
     55a:	f7 dd       	rcall	.-1042   	; 0x14a <LCD_WriteData>
     55c:	03 c0       	rjmp	.+6      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
		}
		else{
			ball_y_index--;
     55e:	81 50       	subi	r24, 0x01	; 1
     560:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		
		hold_ball = 0;
     564:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
     568:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
		break;
     56c:	8c c3       	rjmp	.+1816   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		case inc_y: // +y
		if ((score_p1 == 5) || (score_p2 == 5)){
     56e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     572:	85 30       	cpi	r24, 0x05	; 5
     574:	29 f0       	breq	.+10     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
     576:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     57a:	85 30       	cpi	r24, 0x05	; 5
     57c:	71 f4       	brne	.+28     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
     57e:	07 c0       	rjmp	.+14     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
			if (score_p1 == 5){
				win = 0x01;
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <win>
				b_state = DONE;
     586:	89 e0       	ldi	r24, 0x09	; 9
     588:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     58c:	06 c0       	rjmp	.+12     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
			}
			else{
				win = 0x02;
     58e:	82 e0       	ldi	r24, 0x02	; 2
     590:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <win>
				b_state = DONE;
     594:	89 e0       	ldi	r24, 0x09	; 9
     596:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
		}
		if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 1)){
     59a:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     59e:	86 30       	cpi	r24, 0x06	; 6
     5a0:	89 f5       	brne	.+98     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
     5a2:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <ball_x_index>
     5a6:	49 2f       	mov	r20, r25
     5a8:	50 e0       	ldi	r21, 0x00	; 0
     5aa:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <p2_index>
     5ae:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <p2_index+0x1>
     5b2:	b9 01       	movw	r22, r18
     5b4:	6f 5f       	subi	r22, 0xFF	; 255
     5b6:	7f 4f       	sbci	r23, 0xFF	; 255
     5b8:	46 17       	cp	r20, r22
     5ba:	57 07       	cpc	r21, r23
     5bc:	39 f4       	brne	.+14     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
			b_state = dec_y;
     5be:	84 e0       	ldi	r24, 0x04	; 4
     5c0:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_y_index--;
     5c4:	85 e0       	ldi	r24, 0x05	; 5
     5c6:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     5ca:	45 c0       	rjmp	.+138    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index)){
     5cc:	42 17       	cp	r20, r18
     5ce:	53 07       	cpc	r21, r19
     5d0:	51 f4       	brne	.+20     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
			b_state = dec_x_dec_y;
     5d2:	88 e0       	ldi	r24, 0x08	; 8
     5d4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_x_index--;
     5d8:	91 50       	subi	r25, 0x01	; 1
     5da:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
			ball_y_index--;
     5de:	85 e0       	ldi	r24, 0x05	; 5
     5e0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     5e4:	38 c0       	rjmp	.+112    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 2)){
     5e6:	2e 5f       	subi	r18, 0xFE	; 254
     5e8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ea:	42 17       	cp	r20, r18
     5ec:	53 07       	cpc	r21, r19
     5ee:	81 f5       	brne	.+96     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
			b_state = inc_x_dec_y;
     5f0:	86 e0       	ldi	r24, 0x06	; 6
     5f2:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_x_index++;
     5f6:	9f 5f       	subi	r25, 0xFF	; 255
     5f8:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
			ball_y_index--;
     5fc:	85 e0       	ldi	r24, 0x05	; 5
     5fe:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 7){
     602:	29 c0       	rjmp	.+82     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
     604:	87 30       	cpi	r24, 0x07	; 7
			if (rand() % 2 == 1){
     606:	21 f5       	brne	.+72     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
     608:	07 d5       	rcall	.+2574   	; 0x1018 <rand>
     60a:	81 70       	andi	r24, 0x01	; 1
     60c:	90 78       	andi	r25, 0x80	; 128
     60e:	99 23       	and	r25, r25
     610:	24 f4       	brge	.+8      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
     612:	01 97       	sbiw	r24, 0x01	; 1
     614:	8e 6f       	ori	r24, 0xFE	; 254
     616:	9f 6f       	ori	r25, 0xFF	; 255
     618:	01 96       	adiw	r24, 0x01	; 1
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	21 f4       	brne	.+8      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
				b_state = inc_y;
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     624:	03 c0       	rjmp	.+6      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
			}
			else {
				b_state = dec_y;
     626:	84 e0       	ldi	r24, 0x04	; 4
     628:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			ball_x_index = 4;
     62c:	84 e0       	ldi	r24, 0x04	; 4
     62e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index = 4;
     632:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			score_p1++;
     636:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     63a:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(5);
     63c:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <score_p1>
     640:	85 e0       	ldi	r24, 0x05	; 5
			LCD_WriteData(score_p1 + 0x30);
     642:	6c dd       	rcall	.-1320   	; 0x11c <LCD_Cursor>
     644:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	c0 96       	adiw	r24, 0x30	; 48
     64c:	7e dd       	rcall	.-1284   	; 0x14a <LCD_WriteData>
     64e:	03 c0       	rjmp	.+6      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
		}
		else{
			ball_y_index++;
     650:	8f 5f       	subi	r24, 0xFF	; 255
     652:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
	//	display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
		hold_ball = 0;
     656:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
     65a:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
		break;
     65e:	13 c3       	rjmp	.+1574   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		
		case dec_x_inc_y: // -x, +y
		if (ball_x_index == 0){
     660:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ball_x_index>
     664:	81 11       	cpse	r24, r1
     666:	44 c0       	rjmp	.+136    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
			if ((ball_y_index == 6) && p2_index <= 1){
     668:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     66c:	86 30       	cpi	r24, 0x06	; 6
     66e:	81 f4       	brne	.+32     	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
     670:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <p2_index>
     674:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <p2_index+0x1>
     678:	22 30       	cpi	r18, 0x02	; 2
     67a:	31 05       	cpc	r19, r1
     67c:	78 f5       	brcc	.+94     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
				b_state = inc_x_dec_y;
     67e:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				ball_x_index++;
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
				ball_y_index--;
     688:	85 e0       	ldi	r24, 0x05	; 5
     68a:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			}
			else if (ball_y_index == 7){
     68e:	a3 c0       	rjmp	.+326    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
     690:	87 30       	cpi	r24, 0x07	; 7
				if (rand() % 2 == 1){
     692:	21 f5       	brne	.+72     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
     694:	c1 d4       	rcall	.+2434   	; 0x1018 <rand>
     696:	81 70       	andi	r24, 0x01	; 1
     698:	90 78       	andi	r25, 0x80	; 128
     69a:	99 23       	and	r25, r25
     69c:	24 f4       	brge	.+8      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
     69e:	01 97       	sbiw	r24, 0x01	; 1
     6a0:	8e 6f       	ori	r24, 0xFE	; 254
     6a2:	9f 6f       	ori	r25, 0xFF	; 255
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	01 97       	sbiw	r24, 0x01	; 1
     6a8:	21 f4       	brne	.+8      	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
					b_state = inc_y;
     6aa:	83 e0       	ldi	r24, 0x03	; 3
     6ac:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     6b0:	03 c0       	rjmp	.+6      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
				}
				else{
					b_state = dec_y;
     6b2:	84 e0       	ldi	r24, 0x04	; 4
     6b4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				}
				ball_y_index = 4;
     6b8:	84 e0       	ldi	r24, 0x04	; 4
     6ba:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
				ball_x_index = 4;
     6be:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
				score_p1++;
     6c2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     6c6:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(5);
     6c8:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <score_p1>
     6cc:	85 e0       	ldi	r24, 0x05	; 5
			LCD_WriteData(score_p1 + 0x30);
     6ce:	26 dd       	rcall	.-1460   	; 0x11c <LCD_Cursor>
     6d0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	c0 96       	adiw	r24, 0x30	; 48
     6d8:	38 dd       	rcall	.-1424   	; 0x14a <LCD_WriteData>
				break;
     6da:	d5 c2       	rjmp	.+1450   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			}
			else{
				b_state = inc_x_inc_y;
     6dc:	95 e0       	ldi	r25, 0x05	; 5
     6de:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
				ball_x_index++;
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
				ball_y_index++;
     6e8:	8f 5f       	subi	r24, 0xFF	; 255
     6ea:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     6ee:	73 c0       	rjmp	.+230    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
			}
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 1)){
     6f0:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ball_y_index>
     6f4:	96 30       	cpi	r25, 0x06	; 6
     6f6:	09 f0       	breq	.+2      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
     6f8:	42 c0       	rjmp	.+132    	; 0x77e <__LOCK_REGION_LENGTH__+0x37e>
     6fa:	48 2f       	mov	r20, r24
     6fc:	50 e0       	ldi	r21, 0x00	; 0
     6fe:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <p2_index>
     702:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <p2_index+0x1>
     706:	b9 01       	movw	r22, r18
     708:	6f 5f       	subi	r22, 0xFF	; 255
     70a:	7f 4f       	sbci	r23, 0xFF	; 255
     70c:	46 17       	cp	r20, r22
     70e:	57 07       	cpc	r21, r23
     710:	51 f4       	brne	.+20     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
			b_state = dec_x_dec_y;
     712:	98 e0       	ldi	r25, 0x08	; 8
     714:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     718:	81 50       	subi	r24, 0x01	; 1
     71a:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     71e:	85 e0       	ldi	r24, 0x05	; 5
     720:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     724:	58 c0       	rjmp	.+176    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index)){
     726:	42 17       	cp	r20, r18
     728:	53 07       	cpc	r21, r19
     72a:	51 f4       	brne	.+20     	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
			b_state = dec_x_dec_y;
     72c:	98 e0       	ldi	r25, 0x08	; 8
     72e:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     732:	81 50       	subi	r24, 0x01	; 1
     734:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     738:	85 e0       	ldi	r24, 0x05	; 5
     73a:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     73e:	4b c0       	rjmp	.+150    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 2)){
     740:	b9 01       	movw	r22, r18
     742:	6e 5f       	subi	r22, 0xFE	; 254
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	46 17       	cp	r20, r22
     748:	57 07       	cpc	r21, r23
     74a:	51 f4       	brne	.+20     	; 0x760 <__LOCK_REGION_LENGTH__+0x360>
			b_state = dec_x_dec_y;
     74c:	98 e0       	ldi	r25, 0x08	; 8
     74e:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     752:	81 50       	subi	r24, 0x01	; 1
     754:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     758:	85 e0       	ldi	r24, 0x05	; 5
     75a:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     75e:	3b c0       	rjmp	.+118    	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 3)){
     760:	2d 5f       	subi	r18, 0xFD	; 253
     762:	3f 4f       	sbci	r19, 0xFF	; 255
     764:	42 17       	cp	r20, r18
     766:	53 07       	cpc	r21, r19
     768:	81 f5       	brne	.+96     	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
			b_state = inc_x_dec_y;
     76a:	96 e0       	ldi	r25, 0x06	; 6
     76c:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     770:	8f 5f       	subi	r24, 0xFF	; 255
     772:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     776:	85 e0       	ldi	r24, 0x05	; 5
     778:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 7){
     77c:	2c c0       	rjmp	.+88     	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
     77e:	97 30       	cpi	r25, 0x07	; 7
			if (rand() % 2 == 1){
     780:	21 f5       	brne	.+72     	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     782:	4a d4       	rcall	.+2196   	; 0x1018 <rand>
     784:	81 70       	andi	r24, 0x01	; 1
     786:	90 78       	andi	r25, 0x80	; 128
     788:	99 23       	and	r25, r25
     78a:	24 f4       	brge	.+8      	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
     78c:	01 97       	sbiw	r24, 0x01	; 1
     78e:	8e 6f       	ori	r24, 0xFE	; 254
     790:	9f 6f       	ori	r25, 0xFF	; 255
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	01 97       	sbiw	r24, 0x01	; 1
     796:	21 f4       	brne	.+8      	; 0x7a0 <__LOCK_REGION_LENGTH__+0x3a0>
				b_state = inc_y;
     798:	83 e0       	ldi	r24, 0x03	; 3
     79a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     79e:	03 c0       	rjmp	.+6      	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
			}
			else {
				b_state = dec_y;
     7a0:	84 e0       	ldi	r24, 0x04	; 4
     7a2:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			ball_x_index = 4;
     7a6:	84 e0       	ldi	r24, 0x04	; 4
     7a8:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index = 4;
			score_p1++;
     7ac:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     7b0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     7b4:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(5);
     7b6:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <score_p1>
     7ba:	85 e0       	ldi	r24, 0x05	; 5
			LCD_WriteData(score_p1 + 0x30);
     7bc:	af dc       	rcall	.-1698   	; 0x11c <LCD_Cursor>
     7be:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	c0 96       	adiw	r24, 0x30	; 48
     7c6:	c1 dc       	rcall	.-1662   	; 0x14a <LCD_WriteData>
     7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <__LOCK_REGION_LENGTH__+0x3d6>
		}
		else {
			ball_x_index--;
     7ca:	81 50       	subi	r24, 0x01	; 1
     7cc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     7d0:	9f 5f       	subi	r25, 0xFF	; 255
     7d2:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ball_y_index>
		}
	//	display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
		hold_ball = 0;
     7d6:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
     7da:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
		break;
     7de:	53 c2       	rjmp	.+1190   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		
		case dec_x_dec_y: // -x, -y
		if (ball_x_index == 0){
     7e0:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ball_x_index>
     7e4:	81 11       	cpse	r24, r1
     7e6:	45 c0       	rjmp	.+138    	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
			if ((ball_y_index == 1) && p1_index <= 1){
     7e8:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     7ec:	81 30       	cpi	r24, 0x01	; 1
     7ee:	89 f4       	brne	.+34     	; 0x812 <__LOCK_REGION_LENGTH__+0x412>
     7f0:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <p1_index>
     7f4:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <p1_index+0x1>
     7f8:	22 30       	cpi	r18, 0x02	; 2
     7fa:	31 05       	cpc	r19, r1
				b_state = inc_x_inc_y;
     7fc:	80 f5       	brcc	.+96     	; 0x85e <__LOCK_REGION_LENGTH__+0x45e>
     7fe:	85 e0       	ldi	r24, 0x05	; 5
     800:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				ball_x_index++;
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
				ball_y_index++;
     80a:	82 e0       	ldi	r24, 0x02	; 2
     80c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			}
			else if (ball_y_index == 0){
     810:	a3 c0       	rjmp	.+326    	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
     812:	81 11       	cpse	r24, r1
				if (rand() % 2 == 1){
     814:	24 c0       	rjmp	.+72     	; 0x85e <__LOCK_REGION_LENGTH__+0x45e>
     816:	00 d4       	rcall	.+2048   	; 0x1018 <rand>
     818:	81 70       	andi	r24, 0x01	; 1
     81a:	90 78       	andi	r25, 0x80	; 128
     81c:	99 23       	and	r25, r25
     81e:	24 f4       	brge	.+8      	; 0x828 <__LOCK_REGION_LENGTH__+0x428>
     820:	01 97       	sbiw	r24, 0x01	; 1
     822:	8e 6f       	ori	r24, 0xFE	; 254
     824:	9f 6f       	ori	r25, 0xFF	; 255
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	01 97       	sbiw	r24, 0x01	; 1
     82a:	21 f4       	brne	.+8      	; 0x834 <__LOCK_REGION_LENGTH__+0x434>
					b_state = inc_y;
     82c:	83 e0       	ldi	r24, 0x03	; 3
     82e:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				}
				else{
					b_state = dec_y;
     832:	03 c0       	rjmp	.+6      	; 0x83a <__LOCK_REGION_LENGTH__+0x43a>
     834:	84 e0       	ldi	r24, 0x04	; 4
     836:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				}
				ball_y_index = 4;
     83a:	84 e0       	ldi	r24, 0x04	; 4
				ball_x_index = 4;
     83c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
				score_p2++;
     840:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
     844:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     848:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(13);
     84a:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score_p2>
     84e:	8d e0       	ldi	r24, 0x0D	; 13
			LCD_WriteData(score_p2 + 0x30);
     850:	65 dc       	rcall	.-1846   	; 0x11c <LCD_Cursor>
     852:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	c0 96       	adiw	r24, 0x30	; 48
     85a:	77 dc       	rcall	.-1810   	; 0x14a <LCD_WriteData>
				break;
     85c:	14 c2       	rjmp	.+1064   	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			}
			else{
				b_state = inc_x_dec_y;
     85e:	96 e0       	ldi	r25, 0x06	; 6
     860:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
				ball_x_index++;
     864:	91 e0       	ldi	r25, 0x01	; 1
     866:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
				ball_y_index--;
     86a:	81 50       	subi	r24, 0x01	; 1
     86c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     870:	73 c0       	rjmp	.+230    	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
			}
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 1)){
     872:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ball_y_index>
     876:	91 30       	cpi	r25, 0x01	; 1
     878:	09 f0       	breq	.+2      	; 0x87c <__LOCK_REGION_LENGTH__+0x47c>
     87a:	42 c0       	rjmp	.+132    	; 0x900 <__LOCK_REGION_LENGTH__+0x500>
     87c:	48 2f       	mov	r20, r24
     87e:	50 e0       	ldi	r21, 0x00	; 0
     880:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <p1_index>
     884:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <p1_index+0x1>
     888:	b9 01       	movw	r22, r18
     88a:	6f 5f       	subi	r22, 0xFF	; 255
     88c:	7f 4f       	sbci	r23, 0xFF	; 255
     88e:	46 17       	cp	r20, r22
     890:	57 07       	cpc	r21, r23
     892:	51 f4       	brne	.+20     	; 0x8a8 <__LOCK_REGION_LENGTH__+0x4a8>
			b_state = dec_x_inc_y;
     894:	97 e0       	ldi	r25, 0x07	; 7
     896:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     89a:	81 50       	subi	r24, 0x01	; 1
     89c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     8a0:	82 e0       	ldi	r24, 0x02	; 2
     8a2:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     8a6:	58 c0       	rjmp	.+176    	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index)){
     8a8:	42 17       	cp	r20, r18
     8aa:	53 07       	cpc	r21, r19
     8ac:	51 f4       	brne	.+20     	; 0x8c2 <__LOCK_REGION_LENGTH__+0x4c2>
			b_state = dec_x_inc_y;
     8ae:	97 e0       	ldi	r25, 0x07	; 7
     8b0:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     8b4:	81 50       	subi	r24, 0x01	; 1
     8b6:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     8ba:	82 e0       	ldi	r24, 0x02	; 2
     8bc:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     8c0:	4b c0       	rjmp	.+150    	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 2)){
     8c2:	b9 01       	movw	r22, r18
     8c4:	6e 5f       	subi	r22, 0xFE	; 254
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	46 17       	cp	r20, r22
     8ca:	57 07       	cpc	r21, r23
     8cc:	51 f4       	brne	.+20     	; 0x8e2 <__LOCK_REGION_LENGTH__+0x4e2>
			b_state = dec_x_inc_y;
     8ce:	97 e0       	ldi	r25, 0x07	; 7
     8d0:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     8d4:	81 50       	subi	r24, 0x01	; 1
     8d6:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 3)){
     8e0:	3b c0       	rjmp	.+118    	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
     8e2:	2d 5f       	subi	r18, 0xFD	; 253
     8e4:	3f 4f       	sbci	r19, 0xFF	; 255
     8e6:	42 17       	cp	r20, r18
     8e8:	53 07       	cpc	r21, r19
			b_state = inc_x_inc_y;
     8ea:	81 f5       	brne	.+96     	; 0x94c <__LOCK_REGION_LENGTH__+0x54c>
     8ec:	95 e0       	ldi	r25, 0x05	; 5
     8ee:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     8f2:	8f 5f       	subi	r24, 0xFF	; 255
     8f4:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     8f8:	82 e0       	ldi	r24, 0x02	; 2
     8fa:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 0){
     8fe:	2c c0       	rjmp	.+88     	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
     900:	91 11       	cpse	r25, r1
			if (rand() % 2 == 1){
     902:	24 c0       	rjmp	.+72     	; 0x94c <__LOCK_REGION_LENGTH__+0x54c>
     904:	89 d3       	rcall	.+1810   	; 0x1018 <rand>
     906:	81 70       	andi	r24, 0x01	; 1
     908:	90 78       	andi	r25, 0x80	; 128
     90a:	99 23       	and	r25, r25
     90c:	24 f4       	brge	.+8      	; 0x916 <__LOCK_REGION_LENGTH__+0x516>
     90e:	01 97       	sbiw	r24, 0x01	; 1
     910:	8e 6f       	ori	r24, 0xFE	; 254
     912:	9f 6f       	ori	r25, 0xFF	; 255
     914:	01 96       	adiw	r24, 0x01	; 1
     916:	01 97       	sbiw	r24, 0x01	; 1
				b_state = inc_y;
     918:	21 f4       	brne	.+8      	; 0x922 <__LOCK_REGION_LENGTH__+0x522>
     91a:	83 e0       	ldi	r24, 0x03	; 3
     91c:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			else {
				b_state = dec_y;
     920:	03 c0       	rjmp	.+6      	; 0x928 <__LOCK_REGION_LENGTH__+0x528>
     922:	84 e0       	ldi	r24, 0x04	; 4
			}
			ball_x_index = 4;
     924:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     928:	84 e0       	ldi	r24, 0x04	; 4
			ball_y_index = 4;
     92a:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			score_p2++;
     92e:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     932:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     936:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(13);
     938:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score_p2>
     93c:	8d e0       	ldi	r24, 0x0D	; 13
			LCD_WriteData(score_p2 + 0x30);
     93e:	ee db       	rcall	.-2084   	; 0x11c <LCD_Cursor>
     940:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	c0 96       	adiw	r24, 0x30	; 48
     948:	00 dc       	rcall	.-2048   	; 0x14a <LCD_WriteData>
     94a:	06 c0       	rjmp	.+12     	; 0x958 <__LOCK_REGION_LENGTH__+0x558>
		}
		else {
			ball_x_index--;
     94c:	81 50       	subi	r24, 0x01	; 1
     94e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     952:	91 50       	subi	r25, 0x01	; 1
     954:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ball_y_index>
		}
	//	display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
		hold_ball = 0;
     958:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
     95c:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
		break;
     960:	92 c1       	rjmp	.+804    	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		case inc_x_inc_y: // +x, +y
		if (ball_x_index == 7){
     962:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ball_x_index>
     966:	87 30       	cpi	r24, 0x07	; 7
     968:	09 f0       	breq	.+2      	; 0x96c <__LOCK_REGION_LENGTH__+0x56c>
     96a:	45 c0       	rjmp	.+138    	; 0x9f6 <__LOCK_REGION_LENGTH__+0x5f6>
			if ((ball_y_index == 6) && p2_index >= 4){
     96c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     970:	86 30       	cpi	r24, 0x06	; 6
     972:	89 f4       	brne	.+34     	; 0x996 <__LOCK_REGION_LENGTH__+0x596>
     974:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <p2_index>
     978:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <p2_index+0x1>
     97c:	24 30       	cpi	r18, 0x04	; 4
     97e:	31 05       	cpc	r19, r1
				b_state = dec_x_dec_y;
     980:	80 f1       	brcs	.+96     	; 0x9e2 <__LOCK_REGION_LENGTH__+0x5e2>
     982:	88 e0       	ldi	r24, 0x08	; 8
     984:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				ball_x_index--;
     988:	86 e0       	ldi	r24, 0x06	; 6
     98a:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
				ball_y_index--;
     98e:	85 e0       	ldi	r24, 0x05	; 5
     990:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			}
			else if (ball_y_index == 7){
     994:	a2 c0       	rjmp	.+324    	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
     996:	87 30       	cpi	r24, 0x07	; 7
				if (rand() % 2 == 1){
     998:	21 f5       	brne	.+72     	; 0x9e2 <__LOCK_REGION_LENGTH__+0x5e2>
     99a:	3e d3       	rcall	.+1660   	; 0x1018 <rand>
     99c:	81 70       	andi	r24, 0x01	; 1
     99e:	90 78       	andi	r25, 0x80	; 128
     9a0:	99 23       	and	r25, r25
     9a2:	24 f4       	brge	.+8      	; 0x9ac <__LOCK_REGION_LENGTH__+0x5ac>
     9a4:	01 97       	sbiw	r24, 0x01	; 1
     9a6:	8e 6f       	ori	r24, 0xFE	; 254
     9a8:	9f 6f       	ori	r25, 0xFF	; 255
     9aa:	01 96       	adiw	r24, 0x01	; 1
     9ac:	01 97       	sbiw	r24, 0x01	; 1
					b_state = inc_y;
     9ae:	21 f4       	brne	.+8      	; 0x9b8 <__LOCK_REGION_LENGTH__+0x5b8>
     9b0:	83 e0       	ldi	r24, 0x03	; 3
     9b2:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				}
				else{
					b_state = dec_y;
     9b6:	03 c0       	rjmp	.+6      	; 0x9be <__LOCK_REGION_LENGTH__+0x5be>
     9b8:	84 e0       	ldi	r24, 0x04	; 4
				}
				ball_y_index = 4;
     9ba:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     9be:	84 e0       	ldi	r24, 0x04	; 4
				ball_x_index = 4;
     9c0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
				score_p1++;
     9c4:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
     9c8:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     9cc:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(5);
     9ce:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <score_p1>
     9d2:	85 e0       	ldi	r24, 0x05	; 5
			LCD_WriteData(score_p1 + 0x30);
     9d4:	a3 db       	rcall	.-2234   	; 0x11c <LCD_Cursor>
     9d6:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	c0 96       	adiw	r24, 0x30	; 48
     9de:	b5 db       	rcall	.-2198   	; 0x14a <LCD_WriteData>
				break;
     9e0:	52 c1       	rjmp	.+676    	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			}
			else{
				b_state = dec_x_inc_y;
     9e2:	97 e0       	ldi	r25, 0x07	; 7
     9e4:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
				ball_x_index--;
     9e8:	96 e0       	ldi	r25, 0x06	; 6
     9ea:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
				ball_y_index++;
     9ee:	8f 5f       	subi	r24, 0xFF	; 255
     9f0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     9f4:	72 c0       	rjmp	.+228    	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
			}
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 1)){
     9f6:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ball_y_index>
     9fa:	96 30       	cpi	r25, 0x06	; 6
     9fc:	09 f0       	breq	.+2      	; 0xa00 <__LOCK_REGION_LENGTH__+0x600>
     9fe:	41 c0       	rjmp	.+130    	; 0xa82 <__LOCK_REGION_LENGTH__+0x682>
     a00:	48 2f       	mov	r20, r24
     a02:	50 e0       	ldi	r21, 0x00	; 0
     a04:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <p2_index>
     a08:	30 91 8f 01 	lds	r19, 0x018F	; 0x80018f <p2_index+0x1>
     a0c:	b9 01       	movw	r22, r18
     a0e:	6f 5f       	subi	r22, 0xFF	; 255
     a10:	7f 4f       	sbci	r23, 0xFF	; 255
     a12:	46 17       	cp	r20, r22
     a14:	57 07       	cpc	r21, r23
     a16:	49 f4       	brne	.+18     	; 0xa2a <__LOCK_REGION_LENGTH__+0x62a>
			b_state = inc_x_dec_y;
     a18:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     a1c:	8f 5f       	subi	r24, 0xFF	; 255
     a1e:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     a22:	85 e0       	ldi	r24, 0x05	; 5
     a24:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     a28:	58 c0       	rjmp	.+176    	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index)){
     a2a:	42 17       	cp	r20, r18
     a2c:	53 07       	cpc	r21, r19
     a2e:	51 f4       	brne	.+20     	; 0xa44 <__LOCK_REGION_LENGTH__+0x644>
			b_state = inc_x_dec_y;
     a30:	96 e0       	ldi	r25, 0x06	; 6
     a32:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     a36:	8f 5f       	subi	r24, 0xFF	; 255
     a38:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     a3c:	85 e0       	ldi	r24, 0x05	; 5
     a3e:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     a42:	4b c0       	rjmp	.+150    	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index - 1)){
     a44:	b9 01       	movw	r22, r18
     a46:	61 50       	subi	r22, 0x01	; 1
     a48:	71 09       	sbc	r23, r1
     a4a:	46 17       	cp	r20, r22
     a4c:	57 07       	cpc	r21, r23
     a4e:	51 f4       	brne	.+20     	; 0xa64 <__LOCK_REGION_LENGTH__+0x664>
			b_state = dec_x_dec_y;
     a50:	98 e0       	ldi	r25, 0x08	; 8
     a52:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     a56:	81 50       	subi	r24, 0x01	; 1
     a58:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     a5c:	85 e0       	ldi	r24, 0x05	; 5
     a5e:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if ((ball_y_index == 6 ) && (ball_x_index == p2_index + 2)){
     a62:	3b c0       	rjmp	.+118    	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
     a64:	2e 5f       	subi	r18, 0xFE	; 254
     a66:	3f 4f       	sbci	r19, 0xFF	; 255
     a68:	42 17       	cp	r20, r18
     a6a:	53 07       	cpc	r21, r19
			b_state = inc_x_dec_y;
     a6c:	81 f5       	brne	.+96     	; 0xace <__LOCK_REGION_LENGTH__+0x6ce>
     a6e:	96 e0       	ldi	r25, 0x06	; 6
     a70:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     a74:	8f 5f       	subi	r24, 0xFF	; 255
     a76:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index--;
     a7a:	85 e0       	ldi	r24, 0x05	; 5
     a7c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 7){
     a80:	2c c0       	rjmp	.+88     	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
     a82:	97 30       	cpi	r25, 0x07	; 7
			if (rand() % 2 == 1){
     a84:	21 f5       	brne	.+72     	; 0xace <__LOCK_REGION_LENGTH__+0x6ce>
     a86:	c8 d2       	rcall	.+1424   	; 0x1018 <rand>
     a88:	81 70       	andi	r24, 0x01	; 1
     a8a:	90 78       	andi	r25, 0x80	; 128
     a8c:	99 23       	and	r25, r25
     a8e:	24 f4       	brge	.+8      	; 0xa98 <__LOCK_REGION_LENGTH__+0x698>
     a90:	01 97       	sbiw	r24, 0x01	; 1
     a92:	8e 6f       	ori	r24, 0xFE	; 254
     a94:	9f 6f       	ori	r25, 0xFF	; 255
     a96:	01 96       	adiw	r24, 0x01	; 1
				b_state = inc_y;
     a98:	01 97       	sbiw	r24, 0x01	; 1
     a9a:	21 f4       	brne	.+8      	; 0xaa4 <__LOCK_REGION_LENGTH__+0x6a4>
     a9c:	83 e0       	ldi	r24, 0x03	; 3
     a9e:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			else {
				b_state = dec_y;
     aa2:	03 c0       	rjmp	.+6      	; 0xaaa <__LOCK_REGION_LENGTH__+0x6aa>
     aa4:	84 e0       	ldi	r24, 0x04	; 4
			}
			ball_x_index = 4;
     aa6:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     aaa:	84 e0       	ldi	r24, 0x04	; 4
			ball_y_index = 4;
     aac:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			score_p1++;
     ab0:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     ab4:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     ab8:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(5);
     aba:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <score_p1>
     abe:	85 e0       	ldi	r24, 0x05	; 5
			LCD_WriteData(score_p1 + 0x30);
     ac0:	2d db       	rcall	.-2470   	; 0x11c <LCD_Cursor>
     ac2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <score_p1>
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	c0 96       	adiw	r24, 0x30	; 48
     aca:	3f db       	rcall	.-2434   	; 0x14a <LCD_WriteData>
     acc:	06 c0       	rjmp	.+12     	; 0xada <__LOCK_REGION_LENGTH__+0x6da>
		}
		else {
			ball_x_index++;
     ace:	8f 5f       	subi	r24, 0xFF	; 255
     ad0:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     ad4:	9f 5f       	subi	r25, 0xFF	; 255
     ad6:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ball_y_index>
		}
	//	display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
		hold_ball = 0;
     ada:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
     ade:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
		break;
     ae2:	d1 c0       	rjmp	.+418    	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
		
		case inc_x_dec_y: // +x, -y
		if (ball_x_index == 7){
     ae4:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <ball_x_index>
     ae8:	87 30       	cpi	r24, 0x07	; 7
     aea:	09 f0       	breq	.+2      	; 0xaee <__LOCK_REGION_LENGTH__+0x6ee>
			if ((ball_y_index == 1) && p1_index >= 4){
     aec:	45 c0       	rjmp	.+138    	; 0xb78 <__LOCK_REGION_LENGTH__+0x778>
     aee:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <ball_y_index>
     af2:	81 30       	cpi	r24, 0x01	; 1
     af4:	89 f4       	brne	.+34     	; 0xb18 <__LOCK_REGION_LENGTH__+0x718>
     af6:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <p1_index>
     afa:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <p1_index+0x1>
     afe:	24 30       	cpi	r18, 0x04	; 4
     b00:	31 05       	cpc	r19, r1
				b_state = dec_x_inc_y;
     b02:	80 f1       	brcs	.+96     	; 0xb64 <__LOCK_REGION_LENGTH__+0x764>
     b04:	87 e0       	ldi	r24, 0x07	; 7
     b06:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				ball_x_index--;
     b0a:	86 e0       	ldi	r24, 0x06	; 6
     b0c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
				ball_y_index++;
     b10:	82 e0       	ldi	r24, 0x02	; 2
     b12:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			}
			else if (ball_y_index == 0){
     b16:	a3 c0       	rjmp	.+326    	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
     b18:	81 11       	cpse	r24, r1
				if (rand() % 2 == 1){
     b1a:	24 c0       	rjmp	.+72     	; 0xb64 <__LOCK_REGION_LENGTH__+0x764>
     b1c:	7d d2       	rcall	.+1274   	; 0x1018 <rand>
     b1e:	81 70       	andi	r24, 0x01	; 1
     b20:	90 78       	andi	r25, 0x80	; 128
     b22:	99 23       	and	r25, r25
     b24:	24 f4       	brge	.+8      	; 0xb2e <__LOCK_REGION_LENGTH__+0x72e>
     b26:	01 97       	sbiw	r24, 0x01	; 1
     b28:	8e 6f       	ori	r24, 0xFE	; 254
     b2a:	9f 6f       	ori	r25, 0xFF	; 255
     b2c:	01 96       	adiw	r24, 0x01	; 1
					b_state = inc_y;
     b2e:	01 97       	sbiw	r24, 0x01	; 1
     b30:	21 f4       	brne	.+8      	; 0xb3a <__LOCK_REGION_LENGTH__+0x73a>
     b32:	83 e0       	ldi	r24, 0x03	; 3
     b34:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
				}
				else{
					b_state = dec_y;
     b38:	03 c0       	rjmp	.+6      	; 0xb40 <__LOCK_REGION_LENGTH__+0x740>
     b3a:	84 e0       	ldi	r24, 0x04	; 4
				}
				ball_y_index = 4;
     b3c:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
     b40:	84 e0       	ldi	r24, 0x04	; 4
				ball_x_index = 4;
     b42:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
				score_p2++;
     b46:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
     b4a:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     b4e:	8f 5f       	subi	r24, 0xFF	; 255
			LCD_Cursor(13);
     b50:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score_p2>
     b54:	8d e0       	ldi	r24, 0x0D	; 13
			LCD_WriteData(score_p2 + 0x30);
     b56:	e2 da       	rcall	.-2620   	; 0x11c <LCD_Cursor>
     b58:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	c0 96       	adiw	r24, 0x30	; 48
     b60:	f4 da       	rcall	.-2584   	; 0x14a <LCD_WriteData>
				break;
     b62:	91 c0       	rjmp	.+290    	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			}
			else{
				b_state = dec_x_dec_y;
     b64:	98 e0       	ldi	r25, 0x08	; 8
     b66:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
				ball_x_index--;
     b6a:	96 e0       	ldi	r25, 0x06	; 6
     b6c:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <ball_x_index>
				ball_y_index--;
     b70:	81 50       	subi	r24, 0x01	; 1
     b72:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     b76:	73 c0       	rjmp	.+230    	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
			}
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 1)){
     b78:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <ball_y_index>
     b7c:	91 30       	cpi	r25, 0x01	; 1
     b7e:	09 f0       	breq	.+2      	; 0xb82 <__LOCK_REGION_LENGTH__+0x782>
     b80:	42 c0       	rjmp	.+132    	; 0xc06 <__LOCK_REGION_LENGTH__+0x806>
     b82:	48 2f       	mov	r20, r24
     b84:	50 e0       	ldi	r21, 0x00	; 0
     b86:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <p1_index>
     b8a:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <p1_index+0x1>
     b8e:	b9 01       	movw	r22, r18
     b90:	6f 5f       	subi	r22, 0xFF	; 255
     b92:	7f 4f       	sbci	r23, 0xFF	; 255
     b94:	46 17       	cp	r20, r22
     b96:	57 07       	cpc	r21, r23
     b98:	51 f4       	brne	.+20     	; 0xbae <__LOCK_REGION_LENGTH__+0x7ae>
			b_state = inc_x_inc_y;
     b9a:	95 e0       	ldi	r25, 0x05	; 5
     b9c:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     ba0:	8f 5f       	subi	r24, 0xFF	; 255
     ba2:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     ba6:	82 e0       	ldi	r24, 0x02	; 2
     ba8:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     bac:	58 c0       	rjmp	.+176    	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index)){
     bae:	42 17       	cp	r20, r18
     bb0:	53 07       	cpc	r21, r19
     bb2:	51 f4       	brne	.+20     	; 0xbc8 <__LOCK_REGION_LENGTH__+0x7c8>
			b_state = inc_x_inc_y;
     bb4:	95 e0       	ldi	r25, 0x05	; 5
     bb6:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     bba:	8f 5f       	subi	r24, 0xFF	; 255
     bbc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
     bc6:	4b c0       	rjmp	.+150    	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index - 1)){
     bc8:	b9 01       	movw	r22, r18
     bca:	61 50       	subi	r22, 0x01	; 1
     bcc:	71 09       	sbc	r23, r1
     bce:	46 17       	cp	r20, r22
     bd0:	57 07       	cpc	r21, r23
			b_state = dec_x_inc_y;
     bd2:	51 f4       	brne	.+20     	; 0xbe8 <__LOCK_REGION_LENGTH__+0x7e8>
     bd4:	97 e0       	ldi	r25, 0x07	; 7
     bd6:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index--;
     bda:	81 50       	subi	r24, 0x01	; 1
     bdc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     be0:	82 e0       	ldi	r24, 0x02	; 2
     be2:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if ((ball_y_index == 1 ) && (ball_x_index == p1_index + 2)){
     be6:	3b c0       	rjmp	.+118    	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
     be8:	2e 5f       	subi	r18, 0xFE	; 254
     bea:	3f 4f       	sbci	r19, 0xFF	; 255
     bec:	42 17       	cp	r20, r18
     bee:	53 07       	cpc	r21, r19
			b_state = inc_x_inc_y;
     bf0:	81 f5       	brne	.+96     	; 0xc52 <__LOCK_REGION_LENGTH__+0x852>
     bf2:	95 e0       	ldi	r25, 0x05	; 5
     bf4:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <b_state>
			ball_x_index++;
     bf8:	8f 5f       	subi	r24, 0xFF	; 255
     bfa:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			ball_y_index++;
     bfe:	82 e0       	ldi	r24, 0x02	; 2
     c00:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
		}
		else if (ball_y_index == 0){
     c04:	2c c0       	rjmp	.+88     	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
			if (rand() % 2 == 1){
     c06:	91 11       	cpse	r25, r1
     c08:	24 c0       	rjmp	.+72     	; 0xc52 <__LOCK_REGION_LENGTH__+0x852>
     c0a:	06 d2       	rcall	.+1036   	; 0x1018 <rand>
     c0c:	81 70       	andi	r24, 0x01	; 1
     c0e:	90 78       	andi	r25, 0x80	; 128
     c10:	99 23       	and	r25, r25
     c12:	24 f4       	brge	.+8      	; 0xc1c <__LOCK_REGION_LENGTH__+0x81c>
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	8e 6f       	ori	r24, 0xFE	; 254
     c18:	9f 6f       	ori	r25, 0xFF	; 255
     c1a:	01 96       	adiw	r24, 0x01	; 1
				b_state = inc_y;
     c1c:	01 97       	sbiw	r24, 0x01	; 1
     c1e:	21 f4       	brne	.+8      	; 0xc28 <__LOCK_REGION_LENGTH__+0x828>
     c20:	83 e0       	ldi	r24, 0x03	; 3
     c22:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			}
			else {
				b_state = dec_y;
     c26:	03 c0       	rjmp	.+6      	; 0xc2e <__LOCK_REGION_LENGTH__+0x82e>
     c28:	84 e0       	ldi	r24, 0x04	; 4
			}
			ball_x_index = 4;
     c2a:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <b_state>
			ball_y_index = 4;
     c2e:	84 e0       	ldi	r24, 0x04	; 4
     c30:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
			score_p2++;
     c34:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <ball_y_index>
			LCD_Cursor(13);
     c38:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
			LCD_WriteData(score_p2 + 0x30);
     c3c:	8f 5f       	subi	r24, 0xFF	; 255
     c3e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <score_p2>
     c42:	8d e0       	ldi	r24, 0x0D	; 13
     c44:	6b da       	rcall	.-2858   	; 0x11c <LCD_Cursor>
     c46:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <score_p2>
		}
		else {
			ball_x_index++;
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	c0 96       	adiw	r24, 0x30	; 48
     c4e:	7d da       	rcall	.-2822   	; 0x14a <LCD_WriteData>
			ball_y_index--;
     c50:	06 c0       	rjmp	.+12     	; 0xc5e <__LOCK_REGION_LENGTH__+0x85e>
     c52:	8f 5f       	subi	r24, 0xFF	; 255
     c54:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <ball_x_index>
		}
		hold_ball = 0;
     c58:	91 50       	subi	r25, 0x01	; 1
     c5a:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <ball_y_index>
		break;
     c5e:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
		
		case DONE:
		if (win == 0x01){
     c62:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
     c66:	0f c0       	rjmp	.+30     	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			LCD_ClearScreen();
     c68:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <win>
			LCD_DisplayString(1, "Player 1 wins!");
     c6c:	81 30       	cpi	r24, 0x01	; 1
     c6e:	31 f4       	brne	.+12     	; 0xc7c <__LOCK_REGION_LENGTH__+0x87c>
     c70:	52 da       	rcall	.-2908   	; 0x116 <LCD_ClearScreen>
     c72:	66 e4       	ldi	r22, 0x46	; 70
     c74:	71 e0       	ldi	r23, 0x01	; 1
     c76:	81 e0       	ldi	r24, 0x01	; 1
		}
		else {
			LCD_ClearScreen();
     c78:	71 da       	rcall	.-2846   	; 0x15c <LCD_DisplayString>
     c7a:	05 c0       	rjmp	.+10     	; 0xc86 <__LOCK_REGION_LENGTH__+0x886>
			LCD_DisplayString(1, "Player 2 wins!");
     c7c:	4c da       	rcall	.-2920   	; 0x116 <LCD_ClearScreen>
     c7e:	65 e5       	ldi	r22, 0x55	; 85
     c80:	71 e0       	ldi	r23, 0x01	; 1
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	6b da       	rcall	.-2858   	; 0x15c <LCD_DisplayString>
		}
		break;
}
	}
     c86:	cf 91       	pop	r28
     c88:	08 95       	ret

00000c8a <Paddle_One>:
void Paddle_One(){
p1_b1 = ~PINA & 0x01;
     c8a:	80 b1       	in	r24, 0x00	; 0
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	28 2f       	mov	r18, r24
     c90:	21 70       	andi	r18, 0x01	; 1
     c92:	80 fd       	sbrc	r24, 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <p1_b1>
p1_b2 = ~PINA & 0x02;
     c9a:	80 b1       	in	r24, 0x00	; 0
     c9c:	80 95       	com	r24
     c9e:	82 70       	andi	r24, 0x02	; 2
     ca0:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <p1_b2>

	switch(p1_state){
     ca4:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <p1_state>
     ca8:	91 30       	cpi	r25, 0x01	; 1
     caa:	71 f0       	breq	.+28     	; 0xcc8 <Paddle_One+0x3e>
     cac:	18 f0       	brcs	.+6      	; 0xcb4 <Paddle_One+0x2a>
     cae:	94 30       	cpi	r25, 0x04	; 4
     cb0:	91 f1       	breq	.+100    	; 0xd16 <Paddle_One+0x8c>
     cb2:	08 95       	ret
		case START1:
		p1_state = WAIT1;
     cb4:	81 e0       	ldi	r24, 0x01	; 1
     cb6:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <p1_state>
		p1_index = 3;
     cba:	83 e0       	ldi	r24, 0x03	; 3
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <p1_index+0x1>
     cc2:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <p1_index>
		break;
     cc6:	08 95       	ret
		
		case WAIT1:
		if ((p1_b1 && !p1_b2) && (p1_index < 5)){
     cc8:	21 11       	cpse	r18, r1
     cca:	12 c0       	rjmp	.+36     	; 0xcf0 <Paddle_One+0x66>
     ccc:	81 11       	cpse	r24, r1
     cce:	2b c0       	rjmp	.+86     	; 0xd26 <Paddle_One+0x9c>
     cd0:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <p1_index>
     cd4:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <p1_index+0x1>
     cd8:	85 30       	cpi	r24, 0x05	; 5
     cda:	91 05       	cpc	r25, r1
     cdc:	30 f5       	brcc	.+76     	; 0xd2a <Paddle_One+0xa0>
		//	p1_inc++;
			p1_index++;
     cde:	01 96       	adiw	r24, 0x01	; 1
     ce0:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <p1_index+0x1>
     ce4:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <p1_index>
			p1_state = p1_b_hold;
     ce8:	84 e0       	ldi	r24, 0x04	; 4
     cea:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <p1_state>
     cee:	08 95       	ret
		}
		else if (!p1_b1 && p1_b2 && (p1_index > 0)){
     cf0:	22 23       	and	r18, r18
     cf2:	d9 f0       	breq	.+54     	; 0xd2a <Paddle_One+0xa0>
     cf4:	88 23       	and	r24, r24
     cf6:	c9 f0       	breq	.+50     	; 0xd2a <Paddle_One+0xa0>
     cf8:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <p1_index>
     cfc:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <p1_index+0x1>
     d00:	00 97       	sbiw	r24, 0x00	; 0
     d02:	99 f0       	breq	.+38     	; 0xd2a <Paddle_One+0xa0>
			p1_index--;
     d04:	01 97       	sbiw	r24, 0x01	; 1
     d06:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <p1_index+0x1>
     d0a:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <p1_index>
			p1_state = p1_b_hold;
     d0e:	84 e0       	ldi	r24, 0x04	; 4
     d10:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <p1_state>
     d14:	08 95       	ret
		
		case down_p1:
		break;
		
		case p1_b_hold:
		if (!p1_b1 && !p1_b2){
     d16:	22 23       	and	r18, r18
     d18:	41 f0       	breq	.+16     	; 0xd2a <Paddle_One+0xa0>
     d1a:	81 11       	cpse	r24, r1
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <Paddle_One+0xa0>
			p1_state = WAIT1;
     d1e:	81 e0       	ldi	r24, 0x01	; 1
     d20:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <p1_state>
		}
	//	render_p1(p1_index);
		break;
	}
}
     d24:	08 95       	ret
		if ((p1_b1 && !p1_b2) && (p1_index < 5)){
		//	p1_inc++;
			p1_index++;
			p1_state = p1_b_hold;
		}
		else if (!p1_b1 && p1_b2 && (p1_index > 0)){
     d26:	21 11       	cpse	r18, r1
     d28:	e7 cf       	rjmp	.-50     	; 0xcf8 <Paddle_One+0x6e>
     d2a:	08 95       	ret

00000d2c <Paddle_Bot>:
	//	render_p1(p1_index);
		break;
	}
}
void Paddle_Bot(){
	switch(bot_state){
     d2c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <bot_state>
     d30:	81 30       	cpi	r24, 0x01	; 1
     d32:	41 f0       	breq	.+16     	; 0xd44 <Paddle_Bot+0x18>
     d34:	18 f0       	brcs	.+6      	; 0xd3c <Paddle_Bot+0x10>
     d36:	82 30       	cpi	r24, 0x02	; 2
     d38:	71 f0       	breq	.+28     	; 0xd56 <Paddle_Bot+0x2a>
     d3a:	08 95       	ret
		case STARTbot:
		bot_state = WAITbot;
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <bot_state>
		break;
     d42:	08 95       	ret
		
		case WAITbot:
		if (flag_2 == 1){
     d44:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <flag_2>
     d48:	81 30       	cpi	r24, 0x01	; 1
     d4a:	09 f0       	breq	.+2      	; 0xd4e <Paddle_Bot+0x22>
     d4c:	48 c0       	rjmp	.+144    	; 0xdde <Paddle_Bot+0xb2>
			bot_state = PLAYbot;
     d4e:	82 e0       	ldi	r24, 0x02	; 2
     d50:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <bot_state>
     d54:	08 95       	ret
		}
		break;
		
		case PLAYbot:
		random_temp = rand();
     d56:	60 d1       	rcall	.+704    	; 0x1018 <rand>
     d58:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <random_temp+0x1>
     d5c:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <random_temp>
		if(ball_x_index <= 2){
     d60:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <ball_x_index>
     d64:	23 30       	cpi	r18, 0x03	; 3
     d66:	e8 f4       	brcc	.+58     	; 0xda2 <Paddle_Bot+0x76>
			if (((random_temp % 8) < 6) && (p2_index > 0)){
     d68:	87 70       	andi	r24, 0x07	; 7
     d6a:	99 27       	eor	r25, r25
     d6c:	06 97       	sbiw	r24, 0x06	; 6
     d6e:	60 f4       	brcc	.+24     	; 0xd88 <Paddle_Bot+0x5c>
     d70:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     d74:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     d78:	00 97       	sbiw	r24, 0x00	; 0
     d7a:	89 f1       	breq	.+98     	; 0xdde <Paddle_Bot+0xb2>
				p2_index--;
     d7c:	01 97       	sbiw	r24, 0x01	; 1
     d7e:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     d82:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
     d86:	08 95       	ret
			}
			else if (((random_temp % 8) >= 6) && (p2_index < 5)){
     d88:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     d8c:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     d90:	85 30       	cpi	r24, 0x05	; 5
     d92:	91 05       	cpc	r25, r1
     d94:	20 f5       	brcc	.+72     	; 0xdde <Paddle_Bot+0xb2>
				p2_index++;
     d96:	01 96       	adiw	r24, 0x01	; 1
     d98:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     d9c:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
     da0:	08 95       	ret
// 			}
// 			else if ((random_temp % 3 == 2) && (p2_index < 5)){
// 				p2_index++;
// 			}
// 		}
		else if(ball_x_index >= 5){
     da2:	25 30       	cpi	r18, 0x05	; 5
     da4:	e0 f0       	brcs	.+56     	; 0xdde <Paddle_Bot+0xb2>
			if (((random_temp % 8) >= 6) && (p2_index > 0)){
     da6:	87 70       	andi	r24, 0x07	; 7
     da8:	99 27       	eor	r25, r25
     daa:	06 97       	sbiw	r24, 0x06	; 6
     dac:	60 f0       	brcs	.+24     	; 0xdc6 <Paddle_Bot+0x9a>
     dae:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     db2:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	91 f0       	breq	.+36     	; 0xdde <Paddle_Bot+0xb2>
				p2_index--;
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     dc0:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
     dc4:	08 95       	ret
			}
			else if (((random_temp % 8) < 6) && (p2_index < 5)){
     dc6:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     dca:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     dce:	85 30       	cpi	r24, 0x05	; 5
     dd0:	91 05       	cpc	r25, r1
     dd2:	28 f4       	brcc	.+10     	; 0xdde <Paddle_Bot+0xb2>
				p2_index++;
     dd4:	01 96       	adiw	r24, 0x01	; 1
     dd6:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     dda:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
     dde:	08 95       	ret

00000de0 <Paddle_Two>:
		}
		break;
	}
}
void Paddle_Two(){
	p2_b1 = ~PINA & 0x04;
     de0:	80 b1       	in	r24, 0x00	; 0
     de2:	80 95       	com	r24
     de4:	84 70       	andi	r24, 0x04	; 4
     de6:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <p2_b1>
	p2_b2 = ~PINA & 0x08;
     dea:	90 b1       	in	r25, 0x00	; 0
     dec:	90 95       	com	r25
     dee:	98 70       	andi	r25, 0x08	; 8
     df0:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <p2_b2>

	switch(p2_state){
     df4:	20 91 a2 01 	lds	r18, 0x01A2	; 0x8001a2 <p2_state>
     df8:	21 30       	cpi	r18, 0x01	; 1
     dfa:	81 f0       	breq	.+32     	; 0xe1c <Paddle_Two+0x3c>
     dfc:	28 f0       	brcs	.+10     	; 0xe08 <Paddle_Two+0x28>
     dfe:	22 30       	cpi	r18, 0x02	; 2
     e00:	a1 f0       	breq	.+40     	; 0xe2a <Paddle_Two+0x4a>
     e02:	25 30       	cpi	r18, 0x05	; 5
     e04:	b9 f1       	breq	.+110    	; 0xe74 <Paddle_Two+0x94>
     e06:	08 95       	ret
		case START2:
		p2_state = HOLD2;
     e08:	81 e0       	ldi	r24, 0x01	; 1
     e0a:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <p2_state>
		p2_index = 3;
     e0e:	83 e0       	ldi	r24, 0x03	; 3
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     e16:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
		break;
     e1a:	08 95       	ret
		
		case HOLD2:
		if (flag_2 == 2){
     e1c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <flag_2>
     e20:	82 30       	cpi	r24, 0x02	; 2
     e22:	79 f5       	brne	.+94     	; 0xe82 <Paddle_Two+0xa2>
			p2_state = WAIT2;
     e24:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <p2_state>
     e28:	08 95       	ret
		}
		break;
		
		case WAIT2:
		if ((p2_b1 && !p2_b2) && (p2_index < 5)){
     e2a:	88 23       	and	r24, r24
     e2c:	91 f0       	breq	.+36     	; 0xe52 <Paddle_Two+0x72>
     e2e:	91 11       	cpse	r25, r1
     e30:	28 c0       	rjmp	.+80     	; 0xe82 <Paddle_Two+0xa2>
     e32:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     e36:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     e3a:	85 30       	cpi	r24, 0x05	; 5
     e3c:	91 05       	cpc	r25, r1
     e3e:	08 f5       	brcc	.+66     	; 0xe82 <Paddle_Two+0xa2>
			//	p1_inc++;
			p2_index++;
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     e46:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
			p2_state = p2_b_hold;
     e4a:	85 e0       	ldi	r24, 0x05	; 5
     e4c:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <p2_state>
     e50:	08 95       	ret
		}
		else if (!p2_b1 && p2_b2 && (p2_index > 0)){
     e52:	99 23       	and	r25, r25
     e54:	b1 f0       	breq	.+44     	; 0xe82 <Paddle_Two+0xa2>
     e56:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     e5a:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     e5e:	00 97       	sbiw	r24, 0x00	; 0
     e60:	81 f0       	breq	.+32     	; 0xe82 <Paddle_Two+0xa2>
			p2_index--;
     e62:	01 97       	sbiw	r24, 0x01	; 1
     e64:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <p2_index+0x1>
     e68:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <p2_index>
			p2_state = p2_b_hold;
     e6c:	85 e0       	ldi	r24, 0x05	; 5
     e6e:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <p2_state>
     e72:	08 95       	ret
		
		case down_p2:
		break;
		
		case p2_b_hold:
		if (!p2_b1 && !p2_b2){
     e74:	81 11       	cpse	r24, r1
     e76:	05 c0       	rjmp	.+10     	; 0xe82 <Paddle_Two+0xa2>
     e78:	91 11       	cpse	r25, r1
     e7a:	03 c0       	rjmp	.+6      	; 0xe82 <Paddle_Two+0xa2>
			p2_state = WAIT2;
     e7c:	82 e0       	ldi	r24, 0x02	; 2
     e7e:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <p2_state>
     e82:	08 95       	ret

00000e84 <show_all>:
		}
	//	render_p2(p2_index);
		break;
	}
}
void show_all(){
     e84:	cf 93       	push	r28
     e86:	df 93       	push	r29
	switch(o_state){
     e88:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <o_state>
     e8c:	88 23       	and	r24, r24
     e8e:	19 f0       	breq	.+6      	; 0xe96 <show_all+0x12>
     e90:	81 30       	cpi	r24, 0x01	; 1
     e92:	29 f0       	breq	.+10     	; 0xe9e <show_all+0x1a>
     e94:	1f c0       	rjmp	.+62     	; 0xed4 <show_all+0x50>
		case STARTo:
		o_state = output;
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <o_state>
		break;
     e9c:	1b c0       	rjmp	.+54     	; 0xed4 <show_all+0x50>
	//	render_p2(p2_index);
		break;
	}
}
void show_all(){
	switch(o_state){
     e9e:	c2 e3       	ldi	r28, 0x32	; 50
     ea0:	d0 e0       	ldi	r29, 0x00	; 0
		o_state = output;
		break;
		
		case output:
		for (int q = 0; q < 50; q++){
		render_p2(p2_index);
     ea2:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <p2_index>
     ea6:	90 91 8f 01 	lds	r25, 0x018F	; 0x80018f <p2_index+0x1>
     eaa:	00 da       	rcall	.-3072   	; 0x2ac <render_p2>
		render_p1(p1_index);
     eac:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <p1_index>
     eb0:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <p1_index+0x1>
     eb4:	cd d9       	rcall	.-3174   	; 0x250 <render_p1>
     eb6:	21 97       	sbiw	r28, 0x01	; 1
		case STARTo:
		o_state = output;
		break;
		
		case output:
		for (int q = 0; q < 50; q++){
     eb8:	a1 f7       	brne	.-24     	; 0xea2 <show_all+0x1e>
		render_p2(p2_index);
		render_p1(p1_index);
		}
		display(ball_xd[ball_x_index], ball_yd[ball_y_index]);
     eba:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <ball_y_index>
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	a8 5f       	subi	r26, 0xF8	; 248
     ec2:	be 4f       	sbci	r27, 0xFE	; 254
     ec4:	e0 91 93 01 	lds	r30, 0x0193	; 0x800193 <ball_x_index>
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	e0 5f       	subi	r30, 0xF0	; 240
     ecc:	fe 4f       	sbci	r31, 0xFE	; 254
     ece:	6c 91       	ld	r22, X
     ed0:	80 81       	ld	r24, Z
     ed2:	5d d9       	rcall	.-3398   	; 0x18e <display>
		break;
	}
}
     ed4:	df 91       	pop	r29
     ed6:	cf 91       	pop	r28
     ed8:	08 95       	ret

00000eda <main>:

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF;
     eda:	11 b8       	out	0x01, r1	; 1
     edc:	8f ef       	ldi	r24, 0xFF	; 255
     ede:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
     ee0:	84 b9       	out	0x04, r24	; 4
     ee2:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00; // LCD data lines
     ee4:	87 b9       	out	0x07, r24	; 7
     ee6:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // LCD control lines
     ee8:	8a b9       	out	0x0a, r24	; 10
     eea:	1b b8       	out	0x0b, r1	; 11
	hold_ball = 360;
     eec:	88 e6       	ldi	r24, 0x68	; 104
     eee:	91 e0       	ldi	r25, 0x01	; 1
     ef0:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <hold_ball+0x1>
     ef4:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <hold_ball>
	TimerSet(20);
     ef8:	64 e1       	ldi	r22, 0x14	; 20
     efa:	70 e0       	ldi	r23, 0x00	; 0
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	90 e0       	ldi	r25, 0x00	; 0
     f00:	63 da       	rcall	.-2874   	; 0x3c8 <TimerSet>
	TimerOn();
     f02:	02 da       	rcall	.-3068   	; 0x308 <TimerOn>
	LCD_init();
     f04:	13 d9       	rcall	.-3546   	; 0x12c <LCD_init>
     f06:	07 d9       	rcall	.-3570   	; 0x116 <LCD_ClearScreen>
	LCD_ClearScreen();
     f08:	64 e6       	ldi	r22, 0x64	; 100
	LCD_DisplayString(1, "AI Game: Buttn 12P Game: Buttn 2");
     f0a:	71 e0       	ldi	r23, 0x01	; 1
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	26 d9       	rcall	.-3508   	; 0x15c <LCD_DisplayString>
     f10:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <hold_ball>
	//set_2();
//	display(0x1C, ball_yd[7]);
    /* Replace with your application code */
    while (1) 
    {
 		if (hold_ball >= 360){
     f14:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <hold_ball+0x1>
     f18:	88 36       	cpi	r24, 0x68	; 104
     f1a:	91 40       	sbci	r25, 0x01	; 1
     f1c:	28 f0       	brcs	.+10     	; 0xf28 <main+0x4e>
     f1e:	65 da       	rcall	.-2870   	; 0x3ea <X_update>
 			X_update();
     f20:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <hold_ball+0x1>
 			hold_ball = 0;
     f24:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <hold_ball>
     f28:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <bot_ball>
		}
		if (bot_ball >= 280){
     f2c:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <bot_ball+0x1>
     f30:	88 31       	cpi	r24, 0x18	; 24
     f32:	91 40       	sbci	r25, 0x01	; 1
     f34:	28 f0       	brcs	.+10     	; 0xf40 <main+0x66>
     f36:	fa de       	rcall	.-524    	; 0xd2c <Paddle_Bot>
			Paddle_Bot();
     f38:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <bot_ball+0x1>
			bot_ball = 0;
     f3c:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <bot_ball>
     f40:	a4 de       	rcall	.-696    	; 0xc8a <Paddle_One>
		}
		Paddle_One();
     f42:	4e df       	rcall	.-356    	; 0xde0 <Paddle_Two>
     f44:	9f df       	rcall	.-194    	; 0xe84 <show_all>
		Paddle_Two();
     f46:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <TimerFlag>
		show_all();
     f4a:	88 23       	and	r24, r24
     f4c:	e1 f3       	breq	.-8      	; 0xf46 <main+0x6c>
 		while (!TimerFlag);
     f4e:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <TimerFlag>
     f52:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <hold_ball>
 		TimerFlag = 0;
     f56:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <hold_ball+0x1>
 		hold_ball += 20;
     f5a:	44 96       	adiw	r24, 0x14	; 20
     f5c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <hold_ball+0x1>
     f60:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <hold_ball>
     f64:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <bot_ball>
     f68:	90 91 9b 01 	lds	r25, 0x019B	; 0x80019b <bot_ball+0x1>
		bot_ball += 20;
     f6c:	44 96       	adiw	r24, 0x14	; 20
     f6e:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <bot_ball+0x1>
     f72:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <bot_ball>
     f76:	cc cf       	rjmp	.-104    	; 0xf10 <main+0x36>

00000f78 <__tablejump2__>:
     f78:	ee 0f       	add	r30, r30
     f7a:	ff 1f       	adc	r31, r31
     f7c:	00 24       	eor	r0, r0
}
     f7e:	00 1c       	adc	r0, r0
     f80:	0b be       	out	0x3b, r0	; 59
     f82:	07 90       	elpm	r0, Z+
     f84:	f6 91       	elpm	r31, Z
     f86:	e0 2d       	mov	r30, r0
     f88:	09 94       	ijmp

00000f8a <do_rand>:
     f8a:	8f 92       	push	r8
     f8c:	9f 92       	push	r9
     f8e:	af 92       	push	r10
     f90:	bf 92       	push	r11
     f92:	cf 92       	push	r12
     f94:	df 92       	push	r13
     f96:	ef 92       	push	r14
     f98:	ff 92       	push	r15
     f9a:	cf 93       	push	r28
     f9c:	df 93       	push	r29
     f9e:	ec 01       	movw	r28, r24
     fa0:	68 81       	ld	r22, Y
     fa2:	79 81       	ldd	r23, Y+1	; 0x01
     fa4:	8a 81       	ldd	r24, Y+2	; 0x02
     fa6:	9b 81       	ldd	r25, Y+3	; 0x03
     fa8:	61 15       	cp	r22, r1
     faa:	71 05       	cpc	r23, r1
     fac:	81 05       	cpc	r24, r1
     fae:	91 05       	cpc	r25, r1
     fb0:	21 f4       	brne	.+8      	; 0xfba <do_rand+0x30>
     fb2:	64 e2       	ldi	r22, 0x24	; 36
     fb4:	79 ed       	ldi	r23, 0xD9	; 217
     fb6:	8b e5       	ldi	r24, 0x5B	; 91
     fb8:	97 e0       	ldi	r25, 0x07	; 7
     fba:	2d e1       	ldi	r18, 0x1D	; 29
     fbc:	33 ef       	ldi	r19, 0xF3	; 243
     fbe:	41 e0       	ldi	r20, 0x01	; 1
     fc0:	50 e0       	ldi	r21, 0x00	; 0
     fc2:	38 d0       	rcall	.+112    	; 0x1034 <__divmodsi4>
     fc4:	49 01       	movw	r8, r18
     fc6:	5a 01       	movw	r10, r20
     fc8:	9b 01       	movw	r18, r22
     fca:	ac 01       	movw	r20, r24
     fcc:	a7 ea       	ldi	r26, 0xA7	; 167
     fce:	b1 e4       	ldi	r27, 0x41	; 65
     fd0:	4d d0       	rcall	.+154    	; 0x106c <__muluhisi3>
     fd2:	6b 01       	movw	r12, r22
     fd4:	7c 01       	movw	r14, r24
     fd6:	ac ee       	ldi	r26, 0xEC	; 236
     fd8:	b4 ef       	ldi	r27, 0xF4	; 244
     fda:	a5 01       	movw	r20, r10
     fdc:	94 01       	movw	r18, r8
     fde:	52 d0       	rcall	.+164    	; 0x1084 <__mulohisi3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	8c 0d       	add	r24, r12
     fe6:	9d 1d       	adc	r25, r13
     fe8:	ae 1d       	adc	r26, r14
     fea:	bf 1d       	adc	r27, r15
     fec:	b7 ff       	sbrs	r27, 7
     fee:	03 c0       	rjmp	.+6      	; 0xff6 <do_rand+0x6c>
     ff0:	01 97       	sbiw	r24, 0x01	; 1
     ff2:	a1 09       	sbc	r26, r1
     ff4:	b0 48       	sbci	r27, 0x80	; 128
     ff6:	88 83       	st	Y, r24
     ff8:	99 83       	std	Y+1, r25	; 0x01
     ffa:	aa 83       	std	Y+2, r26	; 0x02
     ffc:	bb 83       	std	Y+3, r27	; 0x03
     ffe:	9f 77       	andi	r25, 0x7F	; 127
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	ff 90       	pop	r15
    1006:	ef 90       	pop	r14
    1008:	df 90       	pop	r13
    100a:	cf 90       	pop	r12
    100c:	bf 90       	pop	r11
    100e:	af 90       	pop	r10
    1010:	9f 90       	pop	r9
    1012:	8f 90       	pop	r8
    1014:	08 95       	ret

00001016 <rand_r>:
    1016:	b9 cf       	rjmp	.-142    	; 0xf8a <do_rand>

00001018 <rand>:
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	b6 cf       	rjmp	.-148    	; 0xf8a <do_rand>

0000101e <srand>:
    101e:	a0 e0       	ldi	r26, 0x00	; 0
    1020:	b0 e0       	ldi	r27, 0x00	; 0
    1022:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1026:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    102a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
    102e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
    1032:	08 95       	ret

00001034 <__divmodsi4>:
    1034:	05 2e       	mov	r0, r21
    1036:	97 fb       	bst	r25, 7
    1038:	16 f4       	brtc	.+4      	; 0x103e <__divmodsi4+0xa>
    103a:	00 94       	com	r0
    103c:	0f d0       	rcall	.+30     	; 0x105c <__negsi2>
    103e:	57 fd       	sbrc	r21, 7
    1040:	05 d0       	rcall	.+10     	; 0x104c <__divmodsi4_neg2>
    1042:	24 d0       	rcall	.+72     	; 0x108c <__udivmodsi4>
    1044:	07 fc       	sbrc	r0, 7
    1046:	02 d0       	rcall	.+4      	; 0x104c <__divmodsi4_neg2>
    1048:	46 f4       	brtc	.+16     	; 0x105a <__divmodsi4_exit>
    104a:	08 c0       	rjmp	.+16     	; 0x105c <__negsi2>

0000104c <__divmodsi4_neg2>:
    104c:	50 95       	com	r21
    104e:	40 95       	com	r20
    1050:	30 95       	com	r19
    1052:	21 95       	neg	r18
    1054:	3f 4f       	sbci	r19, 0xFF	; 255
    1056:	4f 4f       	sbci	r20, 0xFF	; 255
    1058:	5f 4f       	sbci	r21, 0xFF	; 255

0000105a <__divmodsi4_exit>:
    105a:	08 95       	ret

0000105c <__negsi2>:
    105c:	90 95       	com	r25
    105e:	80 95       	com	r24
    1060:	70 95       	com	r23
    1062:	61 95       	neg	r22
    1064:	7f 4f       	sbci	r23, 0xFF	; 255
    1066:	8f 4f       	sbci	r24, 0xFF	; 255
    1068:	9f 4f       	sbci	r25, 0xFF	; 255
    106a:	08 95       	ret

0000106c <__muluhisi3>:
    106c:	31 d0       	rcall	.+98     	; 0x10d0 <__umulhisi3>
    106e:	a5 9f       	mul	r26, r21
    1070:	90 0d       	add	r25, r0
    1072:	b4 9f       	mul	r27, r20
    1074:	90 0d       	add	r25, r0
    1076:	a4 9f       	mul	r26, r20
    1078:	80 0d       	add	r24, r0
    107a:	91 1d       	adc	r25, r1
    107c:	11 24       	eor	r1, r1
    107e:	08 95       	ret

00001080 <__mulshisi3>:
    1080:	b7 ff       	sbrs	r27, 7
    1082:	f4 cf       	rjmp	.-24     	; 0x106c <__muluhisi3>

00001084 <__mulohisi3>:
    1084:	f3 df       	rcall	.-26     	; 0x106c <__muluhisi3>
    1086:	82 1b       	sub	r24, r18
    1088:	93 0b       	sbc	r25, r19
    108a:	08 95       	ret

0000108c <__udivmodsi4>:
    108c:	a1 e2       	ldi	r26, 0x21	; 33
    108e:	1a 2e       	mov	r1, r26
    1090:	aa 1b       	sub	r26, r26
    1092:	bb 1b       	sub	r27, r27
    1094:	fd 01       	movw	r30, r26
    1096:	0d c0       	rjmp	.+26     	; 0x10b2 <__udivmodsi4_ep>

00001098 <__udivmodsi4_loop>:
    1098:	aa 1f       	adc	r26, r26
    109a:	bb 1f       	adc	r27, r27
    109c:	ee 1f       	adc	r30, r30
    109e:	ff 1f       	adc	r31, r31
    10a0:	a2 17       	cp	r26, r18
    10a2:	b3 07       	cpc	r27, r19
    10a4:	e4 07       	cpc	r30, r20
    10a6:	f5 07       	cpc	r31, r21
    10a8:	20 f0       	brcs	.+8      	; 0x10b2 <__udivmodsi4_ep>
    10aa:	a2 1b       	sub	r26, r18
    10ac:	b3 0b       	sbc	r27, r19
    10ae:	e4 0b       	sbc	r30, r20
    10b0:	f5 0b       	sbc	r31, r21

000010b2 <__udivmodsi4_ep>:
    10b2:	66 1f       	adc	r22, r22
    10b4:	77 1f       	adc	r23, r23
    10b6:	88 1f       	adc	r24, r24
    10b8:	99 1f       	adc	r25, r25
    10ba:	1a 94       	dec	r1
    10bc:	69 f7       	brne	.-38     	; 0x1098 <__udivmodsi4_loop>
    10be:	60 95       	com	r22
    10c0:	70 95       	com	r23
    10c2:	80 95       	com	r24
    10c4:	90 95       	com	r25
    10c6:	9b 01       	movw	r18, r22
    10c8:	ac 01       	movw	r20, r24
    10ca:	bd 01       	movw	r22, r26
    10cc:	cf 01       	movw	r24, r30
    10ce:	08 95       	ret

000010d0 <__umulhisi3>:
    10d0:	a2 9f       	mul	r26, r18
    10d2:	b0 01       	movw	r22, r0
    10d4:	b3 9f       	mul	r27, r19
    10d6:	c0 01       	movw	r24, r0
    10d8:	a3 9f       	mul	r26, r19
    10da:	70 0d       	add	r23, r0
    10dc:	81 1d       	adc	r24, r1
    10de:	11 24       	eor	r1, r1
    10e0:	91 1d       	adc	r25, r1
    10e2:	b2 9f       	mul	r27, r18
    10e4:	70 0d       	add	r23, r0
    10e6:	81 1d       	adc	r24, r1
    10e8:	11 24       	eor	r1, r1
    10ea:	91 1d       	adc	r25, r1
    10ec:	08 95       	ret

000010ee <_exit>:
    10ee:	f8 94       	cli

000010f0 <__stop_program>:
    10f0:	ff cf       	rjmp	.-2      	; 0x10f0 <__stop_program>
